{"ast":null,"code":"'use strict';\n\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nexport function convertAnimationObjectToKeyframes(animationObject) {\n  var keyframe = \"@keyframes \" + animationObject.name + \" { \";\n  for (var _i = 0, _Object$entries = Object.entries(animationObject.style); _i < _Object$entries.length; _i++) {\n    var _ref = _Object$entries[_i];\n    var _ref2 = _slicedToArray(_ref, 2);\n    var timestamp = _ref2[0];\n    var style = _ref2[1];\n    keyframe += timestamp + \"% { \";\n    for (var _i2 = 0, _Object$entries2 = Object.entries(style); _i2 < _Object$entries2.length; _i2++) {\n      var _ref3 = _Object$entries2[_i2];\n      var _ref4 = _slicedToArray(_ref3, 2);\n      var property = _ref4[0];\n      var values = _ref4[1];\n      if (property !== 'transform') {\n        keyframe += property + \": \" + values + \"; \";\n        continue;\n      }\n      keyframe += \"transform:\";\n      values.forEach(function (value) {\n        for (var _i3 = 0, _Object$entries3 = Object.entries(value); _i3 < _Object$entries3.length; _i3++) {\n          var _ref5 = _Object$entries3[_i3];\n          var _ref6 = _slicedToArray(_ref5, 2);\n          var transformProperty = _ref6[0];\n          var transformPropertyValue = _ref6[1];\n          keyframe += \" \" + transformProperty + \"(\" + transformPropertyValue + \")\";\n        }\n      });\n      keyframe += \"; \";\n    }\n    keyframe += \"} \";\n  }\n  keyframe += \"} \";\n  return keyframe;\n}\nexport function convertTransformToString(transform) {\n  if (!transform) {\n    return '';\n  }\n  var transformString = '';\n  transform.forEach(function (transformObject) {\n    for (var _i4 = 0, _Object$entries4 = Object.entries(transformObject); _i4 < _Object$entries4.length; _i4++) {\n      var _ref7 = _Object$entries4[_i4];\n      var _ref8 = _slicedToArray(_ref7, 2);\n      var key = _ref8[0];\n      var value = _ref8[1];\n      if (key === 'reversed') {\n        continue;\n      }\n      if (key.indexOf('translate') < 0) {\n        transformString += key + \"(\" + value + \") \";\n      } else {\n        transformString += key + \"(\" + value + \"px) \";\n      }\n    }\n  });\n  return transformString;\n}","map":{"version":3,"names":["_slicedToArray","convertAnimationObjectToKeyframes","animationObject","keyframe","name","_i","_Object$entries","Object","entries","style","length","_ref","_ref2","timestamp","_i2","_Object$entries2","_ref3","_ref4","property","values","forEach","value","_i3","_Object$entries3","_ref5","_ref6","transformProperty","transformPropertyValue","convertTransformToString","transform","transformString","transformObject","_i4","_Object$entries4","_ref7","_ref8","key","indexOf"],"sources":["/Users/xd/Desktop/study/react/react-project/StickerSmash/node_modules/react-native-reanimated/lib/module/reanimated2/layoutReanimation/web/animationParser.ts"],"sourcesContent":["'use strict';\n\nimport type { TransformsStyle } from 'react-native';\n\nexport interface ReanimatedWebTransformProperties {\n  translateX?: string;\n  translateY?: string;\n  rotate?: string;\n  rotateX?: string;\n  rotateY?: string;\n  scale?: number | string;\n  scaleX?: number;\n  scaleY?: number;\n  perspective?: string;\n  skew?: string;\n  skewX?: string;\n}\n\ninterface AnimationStyle {\n  opacity?: number;\n  transform?: ReanimatedWebTransformProperties[];\n}\n\nexport interface AnimationData {\n  name: string;\n  style: Record<number, AnimationStyle>;\n  duration: number;\n}\n\nexport interface TransitionData {\n  translateX: number;\n  translateY: number;\n  scaleX: number;\n  scaleY: number;\n  reversed?: boolean;\n}\n\nexport function convertAnimationObjectToKeyframes(\n  animationObject: AnimationData\n) {\n  let keyframe = `@keyframes ${animationObject.name} { `;\n\n  for (const [timestamp, style] of Object.entries(animationObject.style)) {\n    keyframe += `${timestamp}% { `;\n\n    for (const [property, values] of Object.entries(style)) {\n      if (property !== 'transform') {\n        keyframe += `${property}: ${values}; `;\n        continue;\n      }\n\n      keyframe += `transform:`;\n\n      values.forEach((value: ReanimatedWebTransformProperties) => {\n        for (const [\n          transformProperty,\n          transformPropertyValue,\n        ] of Object.entries(value)) {\n          keyframe += ` ${transformProperty}(${transformPropertyValue})`;\n        }\n      });\n      keyframe += `; `; // Property end\n    }\n    keyframe += `} `; // Timestamp end\n  }\n  keyframe += `} `; // Keyframe end\n\n  return keyframe;\n}\n\nexport function convertTransformToString(\n  transform: NonNullable<TransformsStyle['transform']> | undefined\n) {\n  if (!transform) {\n    return '';\n  }\n\n  type RNTransformProp = (typeof transform)[number];\n\n  let transformString = '';\n\n  // @ts-ignore `transform` cannot be string because in that case\n  // we throw error in `extractTransformFromStyle`\n  transform.forEach((transformObject: RNTransformProp) => {\n    for (const [key, value] of Object.entries(transformObject)) {\n      if (key === 'reversed') {\n        continue;\n      }\n\n      if (key.indexOf('translate') < 0) {\n        transformString += `${key}(${value}) `;\n      } else {\n        transformString += `${key}(${value}px) `;\n      }\n    }\n  });\n\n  return transformString;\n}\n"],"mappings":"AAAA,YAAY;;AAAA,OAAAA,cAAA;AAqCZ,OAAO,SAASC,iCAAiCA,CAC/CC,eAA8B,EAC9B;EACA,IAAIC,QAAQ,mBAAiBD,eAAe,CAACE,IAAK,QAAI;EAEtD,SAAAC,EAAA,MAAAC,eAAA,GAAiCC,MAAM,CAACC,OAAO,CAACN,eAAe,CAACO,KAAK,CAAC,EAAAJ,EAAA,GAAAC,eAAA,CAAAI,MAAA,EAAAL,EAAA,IAAE;IAAA,IAAAM,IAAA,GAAAL,eAAA,CAAAD,EAAA;IAAA,IAAAO,KAAA,GAAAZ,cAAA,CAAAW,IAAA;IAAA,IAA5DE,SAAS,GAAAD,KAAA;IAAA,IAAEH,KAAK,GAAAG,KAAA;IAC1BT,QAAQ,IAAOU,SAAU,SAAK;IAE9B,SAAAC,GAAA,MAAAC,gBAAA,GAAiCR,MAAM,CAACC,OAAO,CAACC,KAAK,CAAC,EAAAK,GAAA,GAAAC,gBAAA,CAAAL,MAAA,EAAAI,GAAA,IAAE;MAAA,IAAAE,KAAA,GAAAD,gBAAA,CAAAD,GAAA;MAAA,IAAAG,KAAA,GAAAjB,cAAA,CAAAgB,KAAA;MAAA,IAA5CE,QAAQ,GAAAD,KAAA;MAAA,IAAEE,MAAM,GAAAF,KAAA;MAC1B,IAAIC,QAAQ,KAAK,WAAW,EAAE;QAC5Bf,QAAQ,IAAOe,QAAS,UAAIC,MAAO,OAAG;QACtC;MACF;MAEAhB,QAAQ,gBAAgB;MAExBgB,MAAM,CAACC,OAAO,CAAE,UAAAC,KAAuC,EAAK;QAC1D,SAAAC,GAAA,MAAAC,gBAAA,GAGKhB,MAAM,CAACC,OAAO,CAACa,KAAK,CAAC,EAAAC,GAAA,GAAAC,gBAAA,CAAAb,MAAA,EAAAY,GAAA,IAAE;UAAA,IAAAE,KAAA,GAAAD,gBAAA,CAAAD,GAAA;UAAA,IAAAG,KAAA,GAAAzB,cAAA,CAAAwB,KAAA;UAAA,IAF1BE,iBAAiB,GAAAD,KAAA;UAAA,IACjBE,sBAAsB,GAAAF,KAAA;UAEtBtB,QAAQ,UAAQuB,iBAAkB,SAAGC,sBAAuB,MAAE;QAChE;MACF,CAAC,CAAC;MACFxB,QAAQ,QAAQ;IAClB;IACAA,QAAQ,QAAQ;EAClB;EACAA,QAAQ,QAAQ;EAEhB,OAAOA,QAAQ;AACjB;AAEA,OAAO,SAASyB,wBAAwBA,CACtCC,SAAgE,EAChE;EACA,IAAI,CAACA,SAAS,EAAE;IACd,OAAO,EAAE;EACX;EAIA,IAAIC,eAAe,GAAG,EAAE;EAIxBD,SAAS,CAACT,OAAO,CAAE,UAAAW,eAAgC,EAAK;IACtD,SAAAC,GAAA,MAAAC,gBAAA,GAA2B1B,MAAM,CAACC,OAAO,CAACuB,eAAe,CAAC,EAAAC,GAAA,GAAAC,gBAAA,CAAAvB,MAAA,EAAAsB,GAAA,IAAE;MAAA,IAAAE,KAAA,GAAAD,gBAAA,CAAAD,GAAA;MAAA,IAAAG,KAAA,GAAAnC,cAAA,CAAAkC,KAAA;MAAA,IAAhDE,GAAG,GAAAD,KAAA;MAAA,IAAEd,KAAK,GAAAc,KAAA;MACpB,IAAIC,GAAG,KAAK,UAAU,EAAE;QACtB;MACF;MAEA,IAAIA,GAAG,CAACC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,EAAE;QAChCP,eAAe,IAAOM,GAAI,SAAGf,KAAM,OAAG;MACxC,CAAC,MAAM;QACLS,eAAe,IAAOM,GAAI,SAAGf,KAAM,SAAK;MAC1C;IACF;EACF,CAAC,CAAC;EAEF,OAAOS,eAAe;AACxB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}