{"ast":null,"code":"'use strict';\n\nimport React, { useEffect, useRef } from 'react';\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useSharedValue, useAnimatedProps, useFrameCallback } from \"../hook\";\nimport { createAnimatedComponent } from \"../../createAnimatedComponent\";\nimport { addWhitelistedNativeProps } from \"../../ConfigHelper\";\nfunction createCircularDoublesBuffer(size) {\n  'worklet';\n\n  return {\n    next: 0,\n    buffer: new Float32Array(size),\n    size: size,\n    count: 0,\n    push: function push(value) {\n      var oldValue = this.buffer[this.next];\n      var oldCount = this.count;\n      this.buffer[this.next] = value;\n      this.next = (this.next + 1) % this.size;\n      this.count = Math.min(this.size, this.count + 1);\n      return oldCount === this.size ? oldValue : null;\n    },\n    front: function front() {\n      var notEmpty = this.count > 0;\n      if (notEmpty) {\n        var current = this.next - 1;\n        var index = current < 0 ? this.size - 1 : current;\n        return this.buffer[index];\n      }\n      return null;\n    },\n    back: function back() {\n      var notEmpty = this.count > 0;\n      return notEmpty ? this.buffer[this.next] : null;\n    }\n  };\n}\nvar DEFAULT_BUFFER_SIZE = 60;\naddWhitelistedNativeProps({\n  text: true\n});\nvar AnimatedTextInput = createAnimatedComponent(TextInput);\nfunction loopAnimationFrame(fn) {\n  var lastTime = 0;\n  function loop() {\n    requestAnimationFrame(function (time) {\n      if (lastTime > 0) {\n        fn(lastTime, time);\n      }\n      lastTime = time;\n      requestAnimationFrame(loop);\n    });\n  }\n  loop();\n}\nfunction getFps(renderTimeInMs) {\n  'worklet';\n\n  return 1000 / renderTimeInMs;\n}\nfunction getTimeDelta(timestamp, previousTimestamp) {\n  'worklet';\n\n  return previousTimestamp !== null ? timestamp - previousTimestamp : 0;\n}\nfunction completeBufferRoutine(buffer, timestamp, previousTimestamp, totalRenderTime) {\n  'worklet';\n\n  var _Math$round;\n  timestamp = Math.round(timestamp);\n  previousTimestamp = (_Math$round = Math.round(previousTimestamp)) != null ? _Math$round : timestamp;\n  var droppedTimestamp = buffer.push(timestamp);\n  var nextToDrop = buffer.back();\n  var delta = getTimeDelta(timestamp, previousTimestamp);\n  var droppedDelta = getTimeDelta(nextToDrop, droppedTimestamp);\n  totalRenderTime.value += delta - droppedDelta;\n  return getFps(totalRenderTime.value / buffer.count);\n}\nfunction JsPerformance() {\n  var jsFps = useSharedValue(null);\n  var totalRenderTime = useSharedValue(0);\n  var circularBuffer = useRef(createCircularDoublesBuffer(DEFAULT_BUFFER_SIZE));\n  useEffect(function () {\n    loopAnimationFrame(function (_, timestamp) {\n      var _circularBuffer$curre;\n      timestamp = Math.round(timestamp);\n      var previousTimestamp = (_circularBuffer$curre = circularBuffer.current.front()) != null ? _circularBuffer$curre : timestamp;\n      var currentFps = completeBufferRoutine(circularBuffer.current, timestamp, previousTimestamp, totalRenderTime);\n      jsFps.value = (currentFps * 2).toFixed(0);\n    });\n  }, []);\n  var animatedProps = useAnimatedProps(function () {\n    var _ref;\n    var text = (_ref = 'JS: ' + jsFps.value) != null ? _ref : 'N/A';\n    return {\n      text: text,\n      defaultValue: text\n    };\n  });\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(AnimatedTextInput, {\n    style: styles.text,\n    animatedProps: animatedProps,\n    editable: false\n  }));\n}\nfunction UiPerformance() {\n  var uiFps = useSharedValue(null);\n  var totalRenderTime = useSharedValue(0);\n  var circularBuffer = useSharedValue(null);\n  useFrameCallback(function (_ref2) {\n    var _circularBuffer$value;\n    var timestamp = _ref2.timestamp;\n    if (circularBuffer.value === null) {\n      circularBuffer.value = createCircularDoublesBuffer(DEFAULT_BUFFER_SIZE);\n    }\n    timestamp = Math.round(timestamp);\n    var previousTimestamp = (_circularBuffer$value = circularBuffer.value.front()) != null ? _circularBuffer$value : timestamp;\n    var currentFps = completeBufferRoutine(circularBuffer.value, timestamp, previousTimestamp, totalRenderTime);\n    uiFps.value = currentFps.toFixed(0);\n  });\n  var animatedProps = useAnimatedProps(function () {\n    var _ref3;\n    var text = (_ref3 = 'UI: ' + uiFps.value) != null ? _ref3 : 'N/A';\n    return {\n      text: text,\n      defaultValue: text\n    };\n  });\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(AnimatedTextInput, {\n    style: styles.text,\n    animatedProps: animatedProps,\n    editable: false\n  }));\n}\nexport function PerformanceMonitor() {\n  return React.createElement(View, {\n    style: styles.monitor\n  }, React.createElement(JsPerformance, null), React.createElement(UiPerformance, null));\n}\nvar styles = StyleSheet.create({\n  monitor: {\n    flexDirection: 'row',\n    position: 'absolute',\n    backgroundColor: '#0006',\n    zIndex: 1000\n  },\n  header: {\n    fontSize: 14,\n    color: '#ffff',\n    paddingHorizontal: 5\n  },\n  text: {\n    fontSize: 13,\n    color: '#ffff',\n    fontFamily: 'monospace',\n    paddingHorizontal: 3\n  },\n  container: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'row',\n    flexWrap: 'wrap'\n  }\n});","map":{"version":3,"names":["React","useEffect","useRef","TextInput","StyleSheet","View","useSharedValue","useAnimatedProps","useFrameCallback","createAnimatedComponent","addWhitelistedNativeProps","createCircularDoublesBuffer","size","next","buffer","Float32Array","count","push","value","oldValue","oldCount","Math","min","front","notEmpty","current","index","back","DEFAULT_BUFFER_SIZE","text","AnimatedTextInput","loopAnimationFrame","fn","lastTime","loop","requestAnimationFrame","time","getFps","renderTimeInMs","getTimeDelta","timestamp","previousTimestamp","completeBufferRoutine","totalRenderTime","_Math$round","round","droppedTimestamp","nextToDrop","delta","droppedDelta","JsPerformance","jsFps","circularBuffer","_","_circularBuffer$curre","currentFps","toFixed","animatedProps","_ref","defaultValue","createElement","style","styles","container","editable","UiPerformance","uiFps","_ref2","_circularBuffer$value","_ref3","PerformanceMonitor","monitor","create","flexDirection","position","backgroundColor","zIndex","header","fontSize","color","paddingHorizontal","fontFamily","alignItems","justifyContent","flexWrap"],"sources":["/Users/xd/Desktop/study/react/react-project/StickerSmash/node_modules/react-native-reanimated/lib/module/reanimated2/component/PerformanceMonitor.tsx"],"sourcesContent":["'use strict';\n\nimport React, { useEffect, useRef } from 'react';\nimport { TextInput, StyleSheet, View } from 'react-native';\n\nimport type { FrameInfo } from '../frameCallback';\nimport type { SharedValue } from '../commonTypes';\nimport { useSharedValue, useAnimatedProps, useFrameCallback } from '../hook';\nimport { createAnimatedComponent } from '../../createAnimatedComponent';\nimport { addWhitelistedNativeProps } from '../../ConfigHelper';\n\ntype CircularBuffer = ReturnType<typeof createCircularDoublesBuffer>;\nfunction createCircularDoublesBuffer(size: number) {\n  'worklet';\n\n  return {\n    next: 0 as number,\n    buffer: new Float32Array(size),\n    size,\n    count: 0 as number,\n\n    push(value: number): number | null {\n      const oldValue = this.buffer[this.next];\n      const oldCount = this.count;\n      this.buffer[this.next] = value;\n\n      this.next = (this.next + 1) % this.size;\n      this.count = Math.min(this.size, this.count + 1);\n      return oldCount === this.size ? oldValue : null;\n    },\n\n    front(): number | null {\n      const notEmpty = this.count > 0;\n      if (notEmpty) {\n        const current = this.next - 1;\n        const index = current < 0 ? this.size - 1 : current;\n        return this.buffer[index];\n      }\n      return null;\n    },\n\n    back(): number | null {\n      const notEmpty = this.count > 0;\n      return notEmpty ? this.buffer[this.next] : null;\n    },\n  };\n}\n\nconst DEFAULT_BUFFER_SIZE = 60;\naddWhitelistedNativeProps({ text: true });\nconst AnimatedTextInput = createAnimatedComponent(TextInput);\n\nfunction loopAnimationFrame(fn: (lastTime: number, time: number) => void) {\n  let lastTime = 0;\n\n  function loop() {\n    requestAnimationFrame((time) => {\n      if (lastTime > 0) {\n        fn(lastTime, time);\n      }\n      lastTime = time;\n      requestAnimationFrame(loop);\n    });\n  }\n\n  loop();\n}\n\nfunction getFps(renderTimeInMs: number): number {\n  'worklet';\n  return 1000 / renderTimeInMs;\n}\n\nfunction getTimeDelta(\n  timestamp: number,\n  previousTimestamp: number | null\n): number {\n  'worklet';\n  return previousTimestamp !== null ? timestamp - previousTimestamp : 0;\n}\n\nfunction completeBufferRoutine(\n  buffer: CircularBuffer,\n  timestamp: number,\n  previousTimestamp: number,\n  totalRenderTime: SharedValue<number>\n): number {\n  'worklet';\n  timestamp = Math.round(timestamp);\n  previousTimestamp = Math.round(previousTimestamp) ?? timestamp;\n\n  const droppedTimestamp = buffer.push(timestamp);\n  const nextToDrop = buffer.back()!;\n\n  const delta = getTimeDelta(timestamp, previousTimestamp);\n  const droppedDelta = getTimeDelta(nextToDrop, droppedTimestamp);\n\n  totalRenderTime.value += delta - droppedDelta;\n\n  return getFps(totalRenderTime.value / buffer.count);\n}\n\nfunction JsPerformance() {\n  const jsFps = useSharedValue<string | null>(null);\n  const totalRenderTime = useSharedValue(0);\n  const circularBuffer = useRef<CircularBuffer>(\n    createCircularDoublesBuffer(DEFAULT_BUFFER_SIZE)\n  );\n\n  useEffect(() => {\n    loopAnimationFrame((_, timestamp) => {\n      timestamp = Math.round(timestamp);\n      const previousTimestamp = circularBuffer.current.front() ?? timestamp;\n\n      const currentFps = completeBufferRoutine(\n        circularBuffer.current,\n        timestamp,\n        previousTimestamp,\n        totalRenderTime\n      );\n\n      // JS fps have to be measured every 2nd frame,\n      // thus 2x multiplication has to occur here\n      jsFps.value = (currentFps * 2).toFixed(0);\n    });\n  }, []);\n\n  const animatedProps = useAnimatedProps(() => {\n    const text = 'JS: ' + jsFps.value ?? 'N/A';\n    return { text, defaultValue: text };\n  });\n\n  return (\n    <View style={styles.container}>\n      <AnimatedTextInput\n        style={styles.text}\n        animatedProps={animatedProps}\n        editable={false}\n      />\n    </View>\n  );\n}\n\nfunction UiPerformance() {\n  const uiFps = useSharedValue<string | null>(null);\n  const totalRenderTime = useSharedValue(0);\n  const circularBuffer = useSharedValue<CircularBuffer | null>(null);\n\n  useFrameCallback(({ timestamp }: FrameInfo) => {\n    if (circularBuffer.value === null) {\n      circularBuffer.value = createCircularDoublesBuffer(DEFAULT_BUFFER_SIZE);\n    }\n\n    timestamp = Math.round(timestamp);\n    const previousTimestamp = circularBuffer.value.front() ?? timestamp;\n\n    const currentFps = completeBufferRoutine(\n      circularBuffer.value,\n      timestamp,\n      previousTimestamp,\n      totalRenderTime\n    );\n\n    uiFps.value = currentFps.toFixed(0);\n  });\n\n  const animatedProps = useAnimatedProps(() => {\n    const text = 'UI: ' + uiFps.value ?? 'N/A';\n    return { text, defaultValue: text };\n  });\n\n  return (\n    <View style={styles.container}>\n      <AnimatedTextInput\n        style={styles.text}\n        animatedProps={animatedProps}\n        editable={false}\n      />\n    </View>\n  );\n}\n\nexport function PerformanceMonitor() {\n  return (\n    <View style={styles.monitor}>\n      <JsPerformance />\n      <UiPerformance />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  monitor: {\n    flexDirection: 'row',\n    position: 'absolute',\n    backgroundColor: '#0006',\n    zIndex: 1000,\n  },\n  header: {\n    fontSize: 14,\n    color: '#ffff',\n    paddingHorizontal: 5,\n  },\n  text: {\n    fontSize: 13,\n    color: '#ffff',\n    fontFamily: 'monospace',\n    paddingHorizontal: 3,\n  },\n  container: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}