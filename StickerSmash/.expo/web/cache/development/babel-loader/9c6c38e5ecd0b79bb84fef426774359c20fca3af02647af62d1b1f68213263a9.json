{"ast":null,"code":"'use strict';\n\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nfunction _createForOfIteratorHelperLoose(r, e) { var t = \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (t) return (t = t.call(r)).next.bind(t); if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && \"number\" == typeof r.length) { t && (r = t); var o = 0; return function () { return o >= r.length ? { done: !0 } : { done: !1, value: r[o++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nimport { runOnUIImmediately } from \"../../threads\";\nimport { registerEventHandler, unregisterEventHandler } from \"../../core\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { isJest, shouldBeUseWeb } from \"../../PlatformChecker\";\nvar IS_ANDROID = Platform.OS === 'android';\nexport var ProgressTransitionManager = function () {\n  function ProgressTransitionManager() {\n    _classCallCheck(this, ProgressTransitionManager);\n    _defineProperty(this, \"_sharedElementCount\", 0);\n    _defineProperty(this, \"_eventHandler\", {\n      isRegistered: false,\n      onTransitionProgress: -1,\n      onAppear: -1,\n      onDisappear: -1,\n      onSwipeDismiss: -1\n    });\n  }\n  return _createClass(ProgressTransitionManager, [{\n    key: \"addProgressAnimation\",\n    value: function addProgressAnimation(viewTag, progressAnimation) {\n      runOnUIImmediately(function () {\n        'worklet';\n\n        global.ProgressTransitionRegister.addProgressAnimation(viewTag, progressAnimation);\n      })();\n      this.registerEventHandlers();\n    }\n  }, {\n    key: \"removeProgressAnimation\",\n    value: function removeProgressAnimation(viewTag) {\n      var isUnmounting = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      this.unregisterEventHandlers();\n      runOnUIImmediately(function () {\n        'worklet';\n\n        global.ProgressTransitionRegister.removeProgressAnimation(viewTag, isUnmounting);\n      })();\n    }\n  }, {\n    key: \"registerEventHandlers\",\n    value: function registerEventHandlers() {\n      this._sharedElementCount++;\n      var eventHandler = this._eventHandler;\n      if (!eventHandler.isRegistered) {\n        eventHandler.isRegistered = true;\n        var eventPrefix = IS_ANDROID ? 'on' : 'top';\n        var lastProgressValue = -1;\n        eventHandler.onTransitionProgress = registerEventHandler(function (event) {\n          'worklet';\n\n          var progress = event.progress;\n          if (progress === lastProgressValue) {\n            return;\n          }\n          lastProgressValue = progress;\n          global.ProgressTransitionRegister.frame(progress);\n        }, eventPrefix + 'TransitionProgress');\n        eventHandler.onAppear = registerEventHandler(function () {\n          'worklet';\n\n          global.ProgressTransitionRegister.onTransitionEnd();\n        }, eventPrefix + 'Appear');\n        if (IS_ANDROID) {\n          eventHandler.onDisappear = registerEventHandler(function () {\n            'worklet';\n\n            global.ProgressTransitionRegister.onAndroidFinishTransitioning();\n          }, 'onFinishTransitioning');\n        } else if (Platform.OS === 'ios') {\n          eventHandler.onDisappear = registerEventHandler(function () {\n            'worklet';\n\n            global.ProgressTransitionRegister.onTransitionEnd(true);\n          }, 'topDisappear');\n          eventHandler.onSwipeDismiss = registerEventHandler(function () {\n            'worklet';\n\n            global.ProgressTransitionRegister.onTransitionEnd();\n          }, 'topGestureCancel');\n        }\n      }\n    }\n  }, {\n    key: \"unregisterEventHandlers\",\n    value: function unregisterEventHandlers() {\n      this._sharedElementCount--;\n      if (this._sharedElementCount === 0) {\n        var eventHandler = this._eventHandler;\n        eventHandler.isRegistered = false;\n        if (eventHandler.onTransitionProgress !== -1) {\n          unregisterEventHandler(eventHandler.onTransitionProgress);\n          eventHandler.onTransitionProgress = -1;\n        }\n        if (eventHandler.onAppear !== -1) {\n          unregisterEventHandler(eventHandler.onAppear);\n          eventHandler.onAppear = -1;\n        }\n        if (eventHandler.onDisappear !== -1) {\n          unregisterEventHandler(eventHandler.onDisappear);\n          eventHandler.onDisappear = -1;\n        }\n        if (eventHandler.onSwipeDismiss !== -1) {\n          unregisterEventHandler(eventHandler.onSwipeDismiss);\n          eventHandler.onSwipeDismiss = -1;\n        }\n      }\n    }\n  }]);\n}();\nfunction createProgressTransitionRegister() {\n  'worklet';\n\n  var progressAnimations = new Map();\n  var snapshots = new Map();\n  var currentTransitions = new Set();\n  var toRemove = new Set();\n  var skipCleaning = false;\n  var isTransitionRestart = false;\n  var progressTransitionManager = {\n    addProgressAnimation: function addProgressAnimation(viewTag, progressAnimation) {\n      if (currentTransitions.size > 0 && !progressAnimations.has(viewTag)) {\n        isTransitionRestart = !IS_ANDROID;\n      }\n      progressAnimations.set(viewTag, progressAnimation);\n    },\n    removeProgressAnimation: function removeProgressAnimation(viewTag, isUnmounting) {\n      if (currentTransitions.size > 0) {\n        isTransitionRestart = !IS_ANDROID;\n      }\n      if (isUnmounting) {\n        toRemove.add(viewTag);\n      } else {\n        progressAnimations.delete(viewTag);\n      }\n    },\n    onTransitionStart: function onTransitionStart(viewTag, snapshot) {\n      skipCleaning = isTransitionRestart;\n      snapshots.set(viewTag, snapshot);\n      currentTransitions.add(viewTag);\n      progressTransitionManager.frame(0);\n    },\n    frame: function frame(progress) {\n      for (var _iterator = _createForOfIteratorHelperLoose(currentTransitions), _step; !(_step = _iterator()).done;) {\n        var viewTag = _step.value;\n        var progressAnimation = progressAnimations.get(viewTag);\n        if (!progressAnimation) {\n          continue;\n        }\n        var snapshot = snapshots.get(viewTag);\n        progressAnimation(viewTag, snapshot, progress);\n      }\n    },\n    onAndroidFinishTransitioning: function onAndroidFinishTransitioning() {\n      if (toRemove.size > 0) {\n        progressTransitionManager.onTransitionEnd();\n      }\n    },\n    onTransitionEnd: function onTransitionEnd() {\n      var removeViews = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      if (currentTransitions.size === 0) {\n        toRemove.clear();\n        return;\n      }\n      if (skipCleaning) {\n        skipCleaning = false;\n        isTransitionRestart = false;\n        return;\n      }\n      for (var _iterator2 = _createForOfIteratorHelperLoose(currentTransitions), _step2; !(_step2 = _iterator2()).done;) {\n        var _viewTag = _step2.value;\n        global._notifyAboutEnd(_viewTag, removeViews);\n      }\n      currentTransitions.clear();\n      if (isTransitionRestart) {\n        return;\n      }\n      snapshots.clear();\n      if (toRemove.size > 0) {\n        for (var _iterator3 = _createForOfIteratorHelperLoose(toRemove), _step3; !(_step3 = _iterator3()).done;) {\n          var viewTag = _step3.value;\n          progressAnimations.delete(viewTag);\n          global._notifyAboutEnd(viewTag, removeViews);\n        }\n        toRemove.clear();\n      }\n    }\n  };\n  return progressTransitionManager;\n}\nif (shouldBeUseWeb()) {\n  var maybeThrowError = function maybeThrowError() {\n    if (!isJest()) {\n      throw new Error('[Reanimated] `ProgressTransitionRegister` is not available on non-native platform.');\n    }\n  };\n  global.ProgressTransitionRegister = new Proxy({}, {\n    get: maybeThrowError,\n    set: function set() {\n      maybeThrowError();\n      return false;\n    }\n  });\n} else {\n  runOnUIImmediately(function () {\n    'worklet';\n\n    global.ProgressTransitionRegister = createProgressTransitionRegister();\n  })();\n}","map":{"version":3,"names":["_classCallCheck","_createClass","_createForOfIteratorHelperLoose","r","e","t","Symbol","iterator","call","next","bind","Array","isArray","_unsupportedIterableToArray","length","o","done","value","TypeError","a","_arrayLikeToArray","toString","slice","constructor","name","from","test","n","_defineProperty","obj","key","_toPropertyKey","Object","defineProperty","enumerable","configurable","writable","i","_toPrimitive","toPrimitive","String","Number","runOnUIImmediately","registerEventHandler","unregisterEventHandler","Platform","isJest","shouldBeUseWeb","IS_ANDROID","OS","ProgressTransitionManager","isRegistered","onTransitionProgress","onAppear","onDisappear","onSwipeDismiss","addProgressAnimation","viewTag","progressAnimation","global","ProgressTransitionRegister","registerEventHandlers","removeProgressAnimation","isUnmounting","arguments","undefined","unregisterEventHandlers","_sharedElementCount","eventHandler","_eventHandler","eventPrefix","lastProgressValue","event","progress","frame","onTransitionEnd","onAndroidFinishTransitioning","createProgressTransitionRegister","progressAnimations","Map","snapshots","currentTransitions","Set","toRemove","skipCleaning","isTransitionRestart","progressTransitionManager","size","has","set","add","delete","onTransitionStart","snapshot","_iterator","_step","get","removeViews","clear","_iterator2","_step2","_notifyAboutEnd","_iterator3","_step3","maybeThrowError","Error","Proxy"],"sources":["/Users/xd/Desktop/study/react/react-project/StickerSmash/node_modules/react-native-reanimated/lib/module/reanimated2/layoutReanimation/sharedTransitions/ProgressTransitionManager.ts"],"sourcesContent":["'use strict';\nimport { runOnUIImmediately } from '../../threads';\nimport type {\n  ProgressAnimation,\n  SharedTransitionAnimationsValues,\n} from '../animationBuilder/commonTypes';\nimport { registerEventHandler, unregisterEventHandler } from '../../core';\nimport { Platform } from 'react-native';\nimport { isJest, shouldBeUseWeb } from '../../PlatformChecker';\n\ntype TransitionProgressEvent = {\n  closing: number;\n  goingForward: number;\n  eventName: string;\n  progress: number;\n  target: number;\n};\n\nconst IS_ANDROID = Platform.OS === 'android';\n\nexport class ProgressTransitionManager {\n  private _sharedElementCount = 0;\n  private _eventHandler = {\n    isRegistered: false,\n    onTransitionProgress: -1,\n    onAppear: -1,\n    onDisappear: -1,\n    onSwipeDismiss: -1,\n  };\n\n  public addProgressAnimation(\n    viewTag: number,\n    progressAnimation: ProgressAnimation\n  ) {\n    runOnUIImmediately(() => {\n      'worklet';\n      global.ProgressTransitionRegister.addProgressAnimation(\n        viewTag,\n        progressAnimation\n      );\n    })();\n\n    this.registerEventHandlers();\n  }\n\n  public removeProgressAnimation(viewTag: number, isUnmounting = true) {\n    this.unregisterEventHandlers();\n    runOnUIImmediately(() => {\n      'worklet';\n      global.ProgressTransitionRegister.removeProgressAnimation(\n        viewTag,\n        isUnmounting\n      );\n    })();\n  }\n\n  private registerEventHandlers() {\n    this._sharedElementCount++;\n    const eventHandler = this._eventHandler;\n    if (!eventHandler.isRegistered) {\n      eventHandler.isRegistered = true;\n      const eventPrefix = IS_ANDROID ? 'on' : 'top';\n      let lastProgressValue = -1;\n      eventHandler.onTransitionProgress = registerEventHandler(\n        (event: TransitionProgressEvent) => {\n          'worklet';\n          const progress = event.progress;\n          if (progress === lastProgressValue) {\n            // During screen transition, handler receives two events with the same progress\n            // value for both screens, but for modals, there is only one event. To optimize\n            // performance and avoid unnecessary worklet calls, let's skip the second event.\n            return;\n          }\n          lastProgressValue = progress;\n          global.ProgressTransitionRegister.frame(progress);\n        },\n        eventPrefix + 'TransitionProgress'\n      );\n      eventHandler.onAppear = registerEventHandler(() => {\n        'worklet';\n        global.ProgressTransitionRegister.onTransitionEnd();\n      }, eventPrefix + 'Appear');\n\n      if (IS_ANDROID) {\n        // onFinishTransitioning event is available only on Android and\n        // is used to handle closing modals\n        eventHandler.onDisappear = registerEventHandler(() => {\n          'worklet';\n          global.ProgressTransitionRegister.onAndroidFinishTransitioning();\n        }, 'onFinishTransitioning');\n      } else if (Platform.OS === 'ios') {\n        // topDisappear event is required to handle closing modals on iOS\n        eventHandler.onDisappear = registerEventHandler(() => {\n          'worklet';\n          global.ProgressTransitionRegister.onTransitionEnd(true);\n        }, 'topDisappear');\n        eventHandler.onSwipeDismiss = registerEventHandler(() => {\n          'worklet';\n          global.ProgressTransitionRegister.onTransitionEnd();\n        }, 'topGestureCancel');\n      }\n    }\n  }\n\n  private unregisterEventHandlers(): void {\n    this._sharedElementCount--;\n    if (this._sharedElementCount === 0) {\n      const eventHandler = this._eventHandler;\n      eventHandler.isRegistered = false;\n      if (eventHandler.onTransitionProgress !== -1) {\n        unregisterEventHandler(eventHandler.onTransitionProgress);\n        eventHandler.onTransitionProgress = -1;\n      }\n      if (eventHandler.onAppear !== -1) {\n        unregisterEventHandler(eventHandler.onAppear);\n        eventHandler.onAppear = -1;\n      }\n      if (eventHandler.onDisappear !== -1) {\n        unregisterEventHandler(eventHandler.onDisappear);\n        eventHandler.onDisappear = -1;\n      }\n      if (eventHandler.onSwipeDismiss !== -1) {\n        unregisterEventHandler(eventHandler.onSwipeDismiss);\n        eventHandler.onSwipeDismiss = -1;\n      }\n    }\n  }\n}\n\nfunction createProgressTransitionRegister() {\n  'worklet';\n  const progressAnimations = new Map<number, ProgressAnimation>();\n  const snapshots = new Map<\n    number,\n    Partial<SharedTransitionAnimationsValues>\n  >();\n  const currentTransitions = new Set<number>();\n  const toRemove = new Set<number>();\n\n  let skipCleaning = false;\n  let isTransitionRestart = false;\n\n  const progressTransitionManager = {\n    addProgressAnimation: (\n      viewTag: number,\n      progressAnimation: ProgressAnimation\n    ) => {\n      if (currentTransitions.size > 0 && !progressAnimations.has(viewTag)) {\n        // there is no need to prevent cleaning on android\n        isTransitionRestart = !IS_ANDROID;\n      }\n      progressAnimations.set(viewTag, progressAnimation);\n    },\n    removeProgressAnimation: (viewTag: number, isUnmounting: boolean) => {\n      if (currentTransitions.size > 0) {\n        // there is no need to prevent cleaning on android\n        isTransitionRestart = !IS_ANDROID;\n      }\n      if (isUnmounting) {\n        // Remove the animation config after the transition is finished\n        toRemove.add(viewTag);\n      } else {\n        // if the animation is removed, without ever being started, it can be removed immediately\n        progressAnimations.delete(viewTag);\n      }\n    },\n    onTransitionStart: (\n      viewTag: number,\n      snapshot: Partial<SharedTransitionAnimationsValues>\n    ) => {\n      skipCleaning = isTransitionRestart;\n      snapshots.set(viewTag, snapshot);\n      currentTransitions.add(viewTag);\n      // set initial style for re-parented components\n      progressTransitionManager.frame(0);\n    },\n    frame: (progress: number) => {\n      for (const viewTag of currentTransitions) {\n        const progressAnimation = progressAnimations.get(viewTag);\n        if (!progressAnimation) {\n          continue;\n        }\n        const snapshot = snapshots.get(\n          viewTag\n        )! as SharedTransitionAnimationsValues;\n        progressAnimation(viewTag, snapshot, progress);\n      }\n    },\n    onAndroidFinishTransitioning: () => {\n      if (toRemove.size > 0) {\n        // it should be ran only on modal closing\n        progressTransitionManager.onTransitionEnd();\n      }\n    },\n    onTransitionEnd: (removeViews = false) => {\n      if (currentTransitions.size === 0) {\n        toRemove.clear();\n        return;\n      }\n      if (skipCleaning) {\n        skipCleaning = false;\n        isTransitionRestart = false;\n        return;\n      }\n      for (const viewTag of currentTransitions) {\n        global._notifyAboutEnd(viewTag, removeViews);\n      }\n      currentTransitions.clear();\n      if (isTransitionRestart) {\n        // on transition restart, progressAnimations should be saved\n        // because they potentially can be used in the next transition\n        return;\n      }\n      snapshots.clear();\n      if (toRemove.size > 0) {\n        for (const viewTag of toRemove) {\n          progressAnimations.delete(viewTag);\n          global._notifyAboutEnd(viewTag, removeViews);\n        }\n        toRemove.clear();\n      }\n    },\n  };\n  return progressTransitionManager;\n}\n\nif (shouldBeUseWeb()) {\n  const maybeThrowError = () => {\n    // Jest attempts to access a property of this object to check if it is a Jest mock\n    // so we can't throw an error in the getter.\n    if (!isJest()) {\n      throw new Error(\n        '[Reanimated] `ProgressTransitionRegister` is not available on non-native platform.'\n      );\n    }\n  };\n  global.ProgressTransitionRegister = new Proxy(\n    {} as ProgressTransitionRegister,\n    {\n      get: maybeThrowError,\n      set: () => {\n        maybeThrowError();\n        return false;\n      },\n    }\n  );\n} else {\n  runOnUIImmediately(() => {\n    'worklet';\n    global.ProgressTransitionRegister = createProgressTransitionRegister();\n  })();\n}\n\nexport type ProgressTransitionRegister = ReturnType<\n  typeof createProgressTransitionRegister\n>;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}