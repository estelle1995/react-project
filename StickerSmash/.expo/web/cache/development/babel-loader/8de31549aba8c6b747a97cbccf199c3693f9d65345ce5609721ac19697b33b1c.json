{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport * as ImagePicker from 'expo-image-picker';\nimport { useState } from 'react';\nimport { GestureHandlerRootView } from 'react-native-gesture-handler';\nimport ImageViewer from \"./components/ImageViewer\";\nimport Button from \"./components/Button\";\nimport CircleButton from \"./components/CircleButton\";\nimport EmojiPicker from \"./components/EmojiPicker\";\nimport IconButton from \"./components/IconButtons\";\nimport EmojiList from \"./components/EmojiList\";\nimport EmojiSticker from \"./components/EmojiSticker\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar PlaceholderImage = require(\"./assets/images/background-image.png\");\nexport default function App() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    pickedEmoji = _useState2[0],\n    setPickedEmoji = _useState2[1];\n  var onReset = function onReset() {\n    setShowAppOptions(false);\n  };\n  var onAddSticker = function onAddSticker() {\n    setIsModalVisible(true);\n  };\n  var onModalClose = function onModalClose() {\n    setIsModalVisible(false);\n  };\n  var onSaveImageAsync = function _callee() {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n        case \"end\":\n          return _context.stop();\n      }\n    }, null, null, null, Promise);\n  };\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isModalVisible = _useState4[0],\n    setIsModalVisible = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    selectedImage = _useState6[0],\n    setSelectedImage = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    showAppOptions = _useState8[0],\n    setShowAppOptions = _useState8[1];\n  var pickImageAsync = function _callee2() {\n    var result;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n            allowsEditing: true,\n            quality: 1\n          }));\n        case 2:\n          result = _context2.sent;\n          if (!result.canceled) {\n            setSelectedImage(result.assets[0].uri);\n            setShowAppOptions(true);\n          } else {\n            alert('You did not select any image.');\n          }\n        case 4:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, null, null, null, Promise);\n  };\n  return _jsxs(GestureHandlerRootView, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.imageContainer,\n      children: [_jsx(ImageViewer, {\n        placeholderImageSource: PlaceholderImage,\n        selectedImage: selectedImage\n      }), pickedEmoji && _jsx(EmojiSticker, {\n        imageSize: 40,\n        stickerSource: pickedEmoji\n      })]\n    }), _jsxs(View, {\n      style: styles.optionsContainer,\n      children: [_jsxs(View, {\n        style: styles.optionsRow,\n        children: [_jsx(IconButton, {\n          icon: \"refresh\",\n          label: \"Reset\",\n          onPress: onReset\n        }), _jsx(CircleButton, {\n          onPress: onAddSticker\n        }), _jsx(IconButton, {\n          icon: \"save-alt\",\n          label: \"Save\",\n          onPress: onSaveImageAsync\n        })]\n      }), _jsx(EmojiPicker, {\n        isVisible: isModalVisible,\n        onClose: onModalClose,\n        children: _jsx(EmojiList, {\n          onSelect: setPickedEmoji,\n          onCloseModal: onModalClose\n        })\n      })]\n    }), _jsx(StatusBar, {\n      style: \"auto\"\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#25292e',\n    alignItems: 'center'\n  },\n  imageContainer: {\n    flex: 1,\n    paddingTop: 58\n  },\n  footerContainer: {\n    flex: 1 / 3,\n    alignItems: 'center'\n  },\n  optionsContainer: {\n    position: 'absolute',\n    bottom: 80\n  },\n  optionsRow: {\n    alignItems: 'center',\n    flexDirection: 'row'\n  }\n});","map":{"version":3,"names":["StatusBar","StyleSheet","Text","View","Image","ImagePicker","useState","GestureHandlerRootView","ImageViewer","Button","CircleButton","EmojiPicker","IconButton","EmojiList","EmojiSticker","jsx","_jsx","jsxs","_jsxs","PlaceholderImage","require","App","_useState","_useState2","_slicedToArray","pickedEmoji","setPickedEmoji","onReset","setShowAppOptions","onAddSticker","setIsModalVisible","onModalClose","onSaveImageAsync","_callee","_regeneratorRuntime","async","_callee$","_context","prev","next","stop","Promise","_useState3","_useState4","isModalVisible","_useState5","_useState6","selectedImage","setSelectedImage","_useState7","_useState8","showAppOptions","pickImageAsync","_callee2","result","_callee2$","_context2","awrap","launchImageLibraryAsync","allowsEditing","quality","sent","canceled","assets","uri","alert","style","styles","container","children","imageContainer","placeholderImageSource","imageSize","stickerSource","optionsContainer","optionsRow","icon","label","onPress","isVisible","onClose","onSelect","onCloseModal","create","flex","backgroundColor","alignItems","paddingTop","footerContainer","position","bottom","flexDirection"],"sources":["/Users/xd/Desktop/study/react/react-project/StickerSmash/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View, Image } from 'react-native';\nimport * as ImagePicker from 'expo-image-picker';\nimport { useState } from 'react';\nimport { GestureHandlerRootView } from 'react-native-gesture-handler';\n\nimport ImageViewer from './components/ImageViewer';\nimport Button from './components/Button';\nimport CircleButton from './components/CircleButton';\nimport EmojiPicker from './components/EmojiPicker';\nimport IconButton from './components/IconButtons';\nimport EmojiList from './components/EmojiList';\nimport EmojiSticker from './components/EmojiSticker';\n\nconst PlaceholderImage = require('./assets/images/background-image.png');\n\nexport default function App() {\n  const [pickedEmoji, setPickedEmoji] = useState(null);\n\n  const onReset = ()=> {\n    setShowAppOptions(false);\n  }\n  const onAddSticker = () => {\n    setIsModalVisible(true);\n  }\n  const onModalClose = () => {\n    setIsModalVisible(false);\n  }\n  const onSaveImageAsync = async() => {\n\n  }\n\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [showAppOptions, setShowAppOptions] = useState(false);\n\n  const pickImageAsync = async() => {\n    let result = await ImagePicker.launchImageLibraryAsync({\n      allowsEditing: true,\n      quality: 1,\n    });\n    if (!result.canceled) {\n      setSelectedImage(result.assets[0].uri);\n      setShowAppOptions(true);\n    } else {\n      alert('You did not select any image.');\n    }\n  };\n\n  return (\n    <GestureHandlerRootView style={styles.container}>\n      <View style={styles.imageContainer}>\n        <ImageViewer placeholderImageSource={PlaceholderImage}\n          selectedImage={selectedImage} />\n          {pickedEmoji && <EmojiSticker imageSize={40} stickerSource={pickedEmoji}/>}\n      </View>\n        <View style={styles.optionsContainer}>\n          <View style={styles.optionsRow}>\n            <IconButton icon=\"refresh\" label=\"Reset\" onPress={onReset}/>\n            <CircleButton onPress={onAddSticker} />\n            <IconButton icon=\"save-alt\" label=\"Save\" onPress={onSaveImageAsync} />\n          </View>\n\n          <EmojiPicker isVisible={isModalVisible} onClose={onModalClose}>\n              <EmojiList onSelect={setPickedEmoji} onCloseModal={onModalClose}/>\n          </EmojiPicker>\n        </View>\n      {/* //   <View style={styles.footerContainer}>\n      //   <Button label=\"Choose a photo\" theme=\"primary\" onPress={pickImageAsync}/>\n      //   <Button label=\"Use this photo\" onPress={()=>setShowAppOptions(true)} />\n      //   </View> */}\n      <StatusBar style=\"auto\" />\n    </GestureHandlerRootView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#25292e',\n    alignItems: 'center',\n  },\n  imageContainer: {\n    flex: 1,\n    paddingTop: 58,\n  },\n  footerContainer: {\n    flex: 1/3,\n    alignItems: 'center',\n  },\n  optionsContainer: {\n    position: 'absolute',\n    bottom: 80,\n  },\n  optionsRow: {\n    alignItems: 'center',\n    flexDirection: 'row',\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}