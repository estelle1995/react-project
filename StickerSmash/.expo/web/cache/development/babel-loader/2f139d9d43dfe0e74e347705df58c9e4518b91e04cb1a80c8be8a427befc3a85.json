{"ast":null,"code":"import StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { FontAwesome } from '@expo/vector-icons';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Button(_ref) {\n  var label = _ref.label,\n    theme = _ref.theme,\n    onPress = _ref.onPress;\n  if (theme == \"primary\") {\n    return _jsx(View, {\n      style: [styles.buttonContainer, {\n        borderWidth: 4,\n        borderColor: \"#ffd33d\",\n        borderRadius: 18\n      }],\n      children: _jsxs(Pressable, {\n        style: [styles.button, {\n          backgroundColor: \"#fff\"\n        }],\n        onPress: onPress,\n        children: [_jsx(FontAwesome, {\n          name: \"picture-o\",\n          size: 18,\n          color: \"#25292e\",\n          style: styles.buttonIcon\n        }), _jsx(Text, {\n          style: [styles.buttonLabel, {\n            color: \"#25292e\"\n          }],\n          children: label\n        })]\n      })\n    });\n  }\n  return _jsx(View, {\n    style: styles.buttonContainer,\n    children: _jsx(Pressable, {\n      style: styles.button,\n      onPress: onPress,\n      children: _jsx(Text, {\n        style: styles.buttonLabel,\n        children: label\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  buttonContainer: {\n    width: 320,\n    height: 68,\n    marginHorizontal: 20,\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 3\n  },\n  button: {\n    borderRadius: 10,\n    width: '100%',\n    height: '100%',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'row'\n  },\n  buttonIcon: {\n    paddingRight: 8\n  },\n  buttonLabel: {\n    color: '#fff',\n    fontSize: 16\n  }\n});","map":{"version":3,"names":["FontAwesome","jsx","_jsx","jsxs","_jsxs","Button","_ref","label","theme","onPress","View","style","styles","buttonContainer","borderWidth","borderColor","borderRadius","children","Pressable","button","backgroundColor","name","size","color","buttonIcon","Text","buttonLabel","StyleSheet","create","width","height","marginHorizontal","alignItems","justifyContent","padding","flexDirection","paddingRight","fontSize"],"sources":["/Users/xd/Desktop/study/react/react-project/StickerSmash/components/Button.js"],"sourcesContent":["import { StyleSheet, View, Pressable, Text} from 'react-native'\nimport { FontAwesome } from '@expo/vector-icons';\n\nexport default function Button({label, theme, onPress}) {\n    if (theme == \"primary\") {\n        return (\n            <View style={[styles.buttonContainer, { borderWidth: 4, borderColor: \"#ffd33d\", borderRadius: 18 }]}>\n            <Pressable\n              style={[styles.button, { backgroundColor: \"#fff\" }]}\n              onPress={onPress}>\n              <FontAwesome\n                name=\"picture-o\"\n                size={18}\n                color=\"#25292e\"\n                style={styles.buttonIcon}/>\n              <Text style={[styles.buttonLabel, { color: \"#25292e\" }]}>{label}</Text>\n            </Pressable>\n          </View> \n        )\n    }\n\n    return (\n        <View style={styles.buttonContainer}>\n            <Pressable style={styles.button} onPress={onPress}>\n                <Text style={styles.buttonLabel}>{label}</Text>\n            </Pressable>\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    buttonContainer: {\n      width: 320,\n      height: 68,\n      marginHorizontal: 20,\n      alignItems: 'center',\n      justifyContent: 'center',\n      padding: 3,\n    },\n    button: {\n      borderRadius: 10,\n      width: '100%',\n      height: '100%',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexDirection: 'row',\n    },\n    buttonIcon: {\n      paddingRight: 8,\n    },\n    buttonLabel: {\n      color: '#fff',\n      fontSize: 16,\n    },\n  });\n  "],"mappings":";;;;AACA,SAASA,WAAW,QAAQ,oBAAoB;AAAC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAEjD,eAAe,SAASC,MAAMA,CAAAC,IAAA,EAA0B;EAAA,IAAxBC,KAAK,GAAAD,IAAA,CAALC,KAAK;IAAEC,KAAK,GAAAF,IAAA,CAALE,KAAK;IAAEC,OAAO,GAAAH,IAAA,CAAPG,OAAO;EACjD,IAAID,KAAK,IAAI,SAAS,EAAE;IACpB,OACIN,IAAA,CAACQ,IAAI;MAACC,KAAK,EAAE,CAACC,MAAM,CAACC,eAAe,EAAE;QAAEC,WAAW,EAAE,CAAC;QAAEC,WAAW,EAAE,SAAS;QAAEC,YAAY,EAAE;MAAG,CAAC,CAAE;MAAAC,QAAA,EACpGb,KAAA,CAACc,SAAS;QACRP,KAAK,EAAE,CAACC,MAAM,CAACO,MAAM,EAAE;UAAEC,eAAe,EAAE;QAAO,CAAC,CAAE;QACpDX,OAAO,EAAEA,OAAQ;QAAAQ,QAAA,GACjBf,IAAA,CAACF,WAAW;UACVqB,IAAI,EAAC,WAAW;UAChBC,IAAI,EAAE,EAAG;UACTC,KAAK,EAAC,SAAS;UACfZ,KAAK,EAAEC,MAAM,CAACY;QAAW,CAAC,CAAC,EAC7BtB,IAAA,CAACuB,IAAI;UAACd,KAAK,EAAE,CAACC,MAAM,CAACc,WAAW,EAAE;YAAEH,KAAK,EAAE;UAAU,CAAC,CAAE;UAAAN,QAAA,EAAEV;QAAK,CAAO,CAAC;MAAA,CAC9D;IAAC,CACR,CAAC;EAEb;EAEA,OACIL,IAAA,CAACQ,IAAI;IAACC,KAAK,EAAEC,MAAM,CAACC,eAAgB;IAAAI,QAAA,EAChCf,IAAA,CAACgB,SAAS;MAACP,KAAK,EAAEC,MAAM,CAACO,MAAO;MAACV,OAAO,EAAEA,OAAQ;MAAAQ,QAAA,EAC9Cf,IAAA,CAACuB,IAAI;QAACd,KAAK,EAAEC,MAAM,CAACc,WAAY;QAAAT,QAAA,EAAEV;MAAK,CAAO;IAAC,CACxC;EAAC,CACV,CAAC;AAEf;AAEA,IAAMK,MAAM,GAAGe,UAAU,CAACC,MAAM,CAAC;EAC7Bf,eAAe,EAAE;IACfgB,KAAK,EAAE,GAAG;IACVC,MAAM,EAAE,EAAE;IACVC,gBAAgB,EAAE,EAAE;IACpBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE,QAAQ;IACxBC,OAAO,EAAE;EACX,CAAC;EACDf,MAAM,EAAE;IACNH,YAAY,EAAE,EAAE;IAChBa,KAAK,EAAE,MAAM;IACbC,MAAM,EAAE,MAAM;IACdE,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE,QAAQ;IACxBE,aAAa,EAAE;EACjB,CAAC;EACDX,UAAU,EAAE;IACVY,YAAY,EAAE;EAChB,CAAC;EACDV,WAAW,EAAE;IACXH,KAAK,EAAE,MAAM;IACbc,QAAQ,EAAE;EACZ;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}