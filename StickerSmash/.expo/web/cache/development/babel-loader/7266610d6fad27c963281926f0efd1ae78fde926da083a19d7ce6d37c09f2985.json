{"ast":null,"code":"'use strict';\n\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nfunction _createForOfIteratorHelperLoose(r, e) { var t = \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (t) return (t = t.call(r)).next.bind(t); if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && \"number\" == typeof r.length) { t && (r = t); var o = 0; return function () { return o >= r.length ? { done: !0 } : { done: !1, value: r[o++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nimport { useEffect, useRef } from 'react';\nimport { makeShareable, startMapper, stopMapper } from \"../core\";\nimport updateProps, { updatePropsJestWrapper } from \"../UpdateProps\";\nimport { initialUpdaterRun } from \"../animation\";\nimport { useSharedValue } from \"./useSharedValue\";\nimport { buildWorkletsHash, isAnimated, shallowEqual, validateAnimatedStyles } from \"./utils\";\nimport { makeViewDescriptorsSet, useViewRefSet } from \"../ViewDescriptorsSet\";\nimport { isJest, shouldBeUseWeb } from \"../PlatformChecker\";\nimport { isWorkletFunction } from \"../commonTypes\";\nvar SHOULD_BE_USE_WEB = shouldBeUseWeb();\nfunction prepareAnimation(frameTimestamp, animatedProp, lastAnimation, lastValue) {\n  'worklet';\n\n  if (Array.isArray(animatedProp)) {\n    animatedProp.forEach(function (prop, index) {\n      prepareAnimation(frameTimestamp, prop, lastAnimation && lastAnimation[index], lastValue && lastValue[index]);\n    });\n  }\n  if (typeof animatedProp === 'object' && animatedProp.onFrame) {\n    var animation = animatedProp;\n    var value = animation.current;\n    if (lastValue !== undefined && lastValue !== null) {\n      if (typeof lastValue === 'object') {\n        if (lastValue.value !== undefined) {\n          value = lastValue.value;\n        } else if (lastValue.onFrame !== undefined) {\n          if ((lastAnimation === null || lastAnimation === void 0 ? void 0 : lastAnimation.current) !== undefined) {\n            value = lastAnimation.current;\n          } else if ((lastValue === null || lastValue === void 0 ? void 0 : lastValue.current) !== undefined) {\n            value = lastValue.current;\n          }\n        }\n      } else {\n        value = lastValue;\n      }\n    }\n    animation.callStart = function (timestamp) {\n      animation.onStart(animation, value, timestamp, lastAnimation);\n    };\n    animation.callStart(frameTimestamp);\n    animation.callStart = null;\n  } else if (typeof animatedProp === 'object') {\n    Object.keys(animatedProp).forEach(function (key) {\n      return prepareAnimation(frameTimestamp, animatedProp[key], lastAnimation && lastAnimation[key], lastValue && lastValue[key]);\n    });\n  }\n}\nfunction runAnimations(animation, timestamp, key, result, animationsActive) {\n  'worklet';\n\n  if (!animationsActive.value) {\n    return true;\n  }\n  if (Array.isArray(animation)) {\n    result[key] = [];\n    var allFinished = true;\n    animation.forEach(function (entry, index) {\n      if (!runAnimations(entry, timestamp, index, result[key], animationsActive)) {\n        allFinished = false;\n      }\n    });\n    return allFinished;\n  } else if (typeof animation === 'object' && animation.onFrame) {\n    var finished = true;\n    if (!animation.finished) {\n      if (animation.callStart) {\n        animation.callStart(timestamp);\n        animation.callStart = null;\n      }\n      finished = animation.onFrame(animation, timestamp);\n      animation.timestamp = timestamp;\n      if (finished) {\n        animation.finished = true;\n        animation.callback && animation.callback(true);\n      }\n    }\n    result[key] = animation.current;\n    return finished;\n  } else if (typeof animation === 'object') {\n    result[key] = {};\n    var _allFinished = true;\n    Object.keys(animation).forEach(function (k) {\n      if (!runAnimations(animation[k], timestamp, k, result[key], animationsActive)) {\n        _allFinished = false;\n      }\n    });\n    return _allFinished;\n  } else {\n    result[key] = animation;\n    return true;\n  }\n}\nfunction styleUpdater(viewDescriptors, updater, state, maybeViewRef, animationsActive) {\n  'worklet';\n\n  var _state$animations, _updater;\n  var isAnimatedProps = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n  var animations = (_state$animations = state.animations) != null ? _state$animations : {};\n  var newValues = (_updater = updater()) != null ? _updater : {};\n  var oldValues = state.last;\n  var nonAnimatedNewValues = {};\n  var hasAnimations = false;\n  var frameTimestamp;\n  var hasNonAnimatedValues = false;\n  for (var key in newValues) {\n    var value = newValues[key];\n    if (isAnimated(value)) {\n      frameTimestamp = global.__frameTimestamp || global._getAnimationTimestamp();\n      prepareAnimation(frameTimestamp, value, animations[key], oldValues[key]);\n      animations[key] = value;\n      hasAnimations = true;\n    } else {\n      hasNonAnimatedValues = true;\n      nonAnimatedNewValues[key] = value;\n      delete animations[key];\n    }\n  }\n  if (hasAnimations) {\n    var _frame = function frame(timestamp) {\n      var animations = state.animations,\n        last = state.last,\n        isAnimationCancelled = state.isAnimationCancelled;\n      if (isAnimationCancelled) {\n        state.isAnimationRunning = false;\n        return;\n      }\n      var updates = {};\n      var allFinished = true;\n      for (var propName in animations) {\n        var finished = runAnimations(animations[propName], timestamp, propName, updates, animationsActive);\n        if (finished) {\n          last[propName] = updates[propName];\n          delete animations[propName];\n        } else {\n          allFinished = false;\n        }\n      }\n      if (updates) {\n        updateProps(viewDescriptors, updates, maybeViewRef);\n      }\n      if (!allFinished) {\n        requestAnimationFrame(_frame);\n      } else {\n        state.isAnimationRunning = false;\n      }\n    };\n    state.animations = animations;\n    if (!state.isAnimationRunning) {\n      state.isAnimationCancelled = false;\n      state.isAnimationRunning = true;\n      _frame(frameTimestamp);\n    }\n    if (hasNonAnimatedValues) {\n      updateProps(viewDescriptors, nonAnimatedNewValues, maybeViewRef);\n    }\n  } else {\n    state.isAnimationCancelled = true;\n    state.animations = [];\n    if (!shallowEqual(oldValues, newValues)) {\n      updateProps(viewDescriptors, newValues, maybeViewRef, isAnimatedProps);\n    }\n  }\n  state.last = newValues;\n}\nfunction jestStyleUpdater(viewDescriptors, updater, state, maybeViewRef, animationsActive, animatedStyle, adapters) {\n  'worklet';\n\n  var _state$animations2, _updater2;\n  var animations = (_state$animations2 = state.animations) != null ? _state$animations2 : {};\n  var newValues = (_updater2 = updater()) != null ? _updater2 : {};\n  var oldValues = state.last;\n  var hasAnimations = false;\n  var frameTimestamp;\n  Object.keys(animations).forEach(function (key) {\n    var value = newValues[key];\n    if (!isAnimated(value)) {\n      delete animations[key];\n    }\n  });\n  Object.keys(newValues).forEach(function (key) {\n    var value = newValues[key];\n    if (isAnimated(value)) {\n      frameTimestamp = global.__frameTimestamp || global._getAnimationTimestamp();\n      prepareAnimation(frameTimestamp, value, animations[key], oldValues[key]);\n      animations[key] = value;\n      hasAnimations = true;\n    }\n  });\n  function frame(timestamp) {\n    var animations = state.animations,\n      last = state.last,\n      isAnimationCancelled = state.isAnimationCancelled;\n    if (isAnimationCancelled) {\n      state.isAnimationRunning = false;\n      return;\n    }\n    var updates = {};\n    var allFinished = true;\n    Object.keys(animations).forEach(function (propName) {\n      var finished = runAnimations(animations[propName], timestamp, propName, updates, animationsActive);\n      if (finished) {\n        last[propName] = updates[propName];\n        delete animations[propName];\n      } else {\n        allFinished = false;\n      }\n    });\n    if (Object.keys(updates).length) {\n      updatePropsJestWrapper(viewDescriptors, updates, maybeViewRef, animatedStyle, adapters);\n    }\n    if (!allFinished) {\n      requestAnimationFrame(frame);\n    } else {\n      state.isAnimationRunning = false;\n    }\n  }\n  if (hasAnimations) {\n    state.animations = animations;\n    if (!state.isAnimationRunning) {\n      state.isAnimationCancelled = false;\n      state.isAnimationRunning = true;\n      frame(frameTimestamp);\n    }\n  } else {\n    state.isAnimationCancelled = true;\n    state.animations = [];\n  }\n  state.last = newValues;\n  if (!shallowEqual(oldValues, newValues)) {\n    updatePropsJestWrapper(viewDescriptors, newValues, maybeViewRef, animatedStyle, adapters);\n  }\n}\nfunction checkSharedValueUsage(prop, currentKey) {\n  if (Array.isArray(prop)) {\n    for (var _iterator = _createForOfIteratorHelperLoose(prop), _step; !(_step = _iterator()).done;) {\n      var element = _step.value;\n      checkSharedValueUsage(element, currentKey);\n    }\n  } else if (typeof prop === 'object' && prop !== null && prop.value === undefined) {\n    for (var _i = 0, _Object$keys = Object.keys(prop); _i < _Object$keys.length; _i++) {\n      var key = _Object$keys[_i];\n      checkSharedValueUsage(prop[key], key);\n    }\n  } else if (currentKey !== undefined && typeof prop === 'object' && prop !== null && prop.value !== undefined) {\n    throw new Error(\"[Reanimated] Invalid value passed to `\" + currentKey + \"`, maybe you forgot to use `.value`?\");\n  }\n}\nexport function useAnimatedStyle(updater, dependencies, adapters) {\n  var _updater$__closure;\n  var isAnimatedProps = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  var viewsRef = useViewRefSet();\n  var animatedUpdaterData = useRef();\n  var inputs = Object.values((_updater$__closure = updater.__closure) != null ? _updater$__closure : {});\n  if (SHOULD_BE_USE_WEB) {\n    var _dependencies;\n    if (!inputs.length && (_dependencies = dependencies) !== null && _dependencies !== void 0 && _dependencies.length) {\n      inputs = dependencies;\n    }\n    if (__DEV__ && !inputs.length && !dependencies && !isWorkletFunction(updater)) {\n      throw new Error(\"[Reanimated] `useAnimatedStyle` was used without a dependency array or Babel plugin. Please explicitly pass a dependency array, or enable the Babel plugin.\\nFor more, see the docs: `https://docs.swmansion.com/react-native-reanimated/docs/guides/web-support#web-without-the-babel-plugin`.\");\n    }\n  }\n  var adaptersArray = adapters ? Array.isArray(adapters) ? adapters : [adapters] : [];\n  var adaptersHash = adapters ? buildWorkletsHash(adaptersArray) : null;\n  var areAnimationsActive = useSharedValue(true);\n  var jestAnimatedStyle = useRef({});\n  if (!dependencies) {\n    dependencies = [].concat(_toConsumableArray(inputs), [updater.__workletHash]);\n  } else {\n    dependencies.push(updater.__workletHash);\n  }\n  adaptersHash && dependencies.push(adaptersHash);\n  if (!animatedUpdaterData.current) {\n    var initialStyle = initialUpdaterRun(updater);\n    if (__DEV__) {\n      validateAnimatedStyles(initialStyle);\n    }\n    animatedUpdaterData.current = {\n      initial: {\n        value: initialStyle,\n        updater: updater\n      },\n      remoteState: makeShareable({\n        last: initialStyle,\n        animations: {},\n        isAnimationCancelled: false,\n        isAnimationRunning: false\n      }),\n      viewDescriptors: makeViewDescriptorsSet()\n    };\n  }\n  var _animatedUpdaterData$ = animatedUpdaterData.current,\n    initial = _animatedUpdaterData$.initial,\n    remoteState = _animatedUpdaterData$.remoteState,\n    viewDescriptors = _animatedUpdaterData$.viewDescriptors;\n  var shareableViewDescriptors = viewDescriptors.shareableViewDescriptors;\n  dependencies.push(shareableViewDescriptors);\n  useEffect(function () {\n    var fun;\n    var updaterFn = updater;\n    if (adapters) {\n      updaterFn = function updaterFn() {\n        'worklet';\n\n        var newValues = updater();\n        adaptersArray.forEach(function (adapter) {\n          adapter(newValues);\n        });\n        return newValues;\n      };\n    }\n    if (isJest()) {\n      fun = function fun() {\n        'worklet';\n\n        jestStyleUpdater(shareableViewDescriptors, updater, remoteState, viewsRef, areAnimationsActive, jestAnimatedStyle, adaptersArray);\n      };\n    } else {\n      fun = function fun() {\n        'worklet';\n\n        styleUpdater(shareableViewDescriptors, updaterFn, remoteState, viewsRef, areAnimationsActive, isAnimatedProps);\n      };\n    }\n    var mapperId = startMapper(fun, inputs);\n    return function () {\n      stopMapper(mapperId);\n    };\n  }, dependencies);\n  useEffect(function () {\n    areAnimationsActive.value = true;\n    return function () {\n      areAnimationsActive.value = false;\n    };\n  }, [areAnimationsActive]);\n  checkSharedValueUsage(initial.value);\n  var animatedStyleHandle = useRef(null);\n  if (!animatedStyleHandle.current) {\n    animatedStyleHandle.current = isJest() ? {\n      viewDescriptors: viewDescriptors,\n      initial: initial,\n      viewsRef: viewsRef,\n      jestAnimatedStyle: jestAnimatedStyle\n    } : {\n      initial: initial,\n      viewsRef: viewsRef,\n      viewDescriptors: viewDescriptors\n    };\n  }\n  return animatedStyleHandle.current;\n}","map":{"version":3,"names":["_toConsumableArray","_createForOfIteratorHelperLoose","r","e","t","Symbol","iterator","call","next","bind","Array","isArray","_unsupportedIterableToArray","length","o","done","value","TypeError","a","_arrayLikeToArray","toString","slice","constructor","name","from","test","n","useEffect","useRef","makeShareable","startMapper","stopMapper","updateProps","updatePropsJestWrapper","initialUpdaterRun","useSharedValue","buildWorkletsHash","isAnimated","shallowEqual","validateAnimatedStyles","makeViewDescriptorsSet","useViewRefSet","isJest","shouldBeUseWeb","isWorkletFunction","SHOULD_BE_USE_WEB","prepareAnimation","frameTimestamp","animatedProp","lastAnimation","lastValue","forEach","prop","index","onFrame","animation","current","undefined","callStart","timestamp","onStart","Object","keys","key","runAnimations","result","animationsActive","allFinished","entry","finished","callback","k","styleUpdater","viewDescriptors","updater","state","maybeViewRef","_state$animations","_updater","isAnimatedProps","arguments","animations","newValues","oldValues","last","nonAnimatedNewValues","hasAnimations","hasNonAnimatedValues","global","__frameTimestamp","_getAnimationTimestamp","frame","isAnimationCancelled","isAnimationRunning","updates","propName","requestAnimationFrame","jestStyleUpdater","animatedStyle","adapters","_state$animations2","_updater2","checkSharedValueUsage","currentKey","_iterator","_step","element","_i","_Object$keys","Error","useAnimatedStyle","dependencies","_updater$__closure","viewsRef","animatedUpdaterData","inputs","values","__closure","_dependencies","__DEV__","adaptersArray","adaptersHash","areAnimationsActive","jestAnimatedStyle","concat","__workletHash","push","initialStyle","initial","remoteState","_animatedUpdaterData$","shareableViewDescriptors","fun","updaterFn","adapter","mapperId","animatedStyleHandle"],"sources":["/Users/xd/Desktop/study/react/react-project/StickerSmash/node_modules/react-native-reanimated/lib/module/reanimated2/hook/useAnimatedStyle.ts"],"sourcesContent":["'use strict';\nimport type { MutableRefObject } from 'react';\nimport { useEffect, useRef } from 'react';\n\nimport { makeShareable, startMapper, stopMapper } from '../core';\nimport updateProps, { updatePropsJestWrapper } from '../UpdateProps';\nimport { initialUpdaterRun } from '../animation';\nimport { useSharedValue } from './useSharedValue';\nimport {\n  buildWorkletsHash,\n  isAnimated,\n  shallowEqual,\n  validateAnimatedStyles,\n} from './utils';\nimport type {\n  AnimatedStyleHandle,\n  DefaultStyle,\n  DependencyList,\n  Descriptor,\n  JestAnimatedStyleHandle,\n} from './commonTypes';\nimport type { ViewDescriptorsSet, ViewRefSet } from '../ViewDescriptorsSet';\nimport { makeViewDescriptorsSet, useViewRefSet } from '../ViewDescriptorsSet';\nimport { isJest, shouldBeUseWeb } from '../PlatformChecker';\nimport type {\n  AnimationObject,\n  Timestamp,\n  NestedObjectValues,\n  SharedValue,\n  StyleProps,\n  WorkletFunction,\n  AnimatedPropsAdapterFunction,\n  AnimatedPropsAdapterWorklet,\n} from '../commonTypes';\nimport type { AnimatedStyle } from '../helperTypes';\nimport { isWorkletFunction } from '../commonTypes';\n\nconst SHOULD_BE_USE_WEB = shouldBeUseWeb();\n\ninterface AnimatedState {\n  last: AnimatedStyle<any>;\n  animations: AnimatedStyle<any>;\n  isAnimationRunning: boolean;\n  isAnimationCancelled: boolean;\n}\n\ninterface AnimatedUpdaterData {\n  initial: {\n    value: AnimatedStyle<any>;\n    updater: () => AnimatedStyle<any>;\n  };\n  remoteState: AnimatedState;\n  viewDescriptors: ViewDescriptorsSet;\n}\n\nfunction prepareAnimation(\n  frameTimestamp: number,\n  animatedProp: AnimatedStyle<any>,\n  lastAnimation: AnimatedStyle<any>,\n  lastValue: AnimatedStyle<any>\n): void {\n  'worklet';\n  if (Array.isArray(animatedProp)) {\n    animatedProp.forEach((prop, index) => {\n      prepareAnimation(\n        frameTimestamp,\n        prop,\n        lastAnimation && lastAnimation[index],\n        lastValue && lastValue[index]\n      );\n    });\n    // return animatedProp;\n  }\n  if (typeof animatedProp === 'object' && animatedProp.onFrame) {\n    const animation = animatedProp;\n\n    let value = animation.current;\n    if (lastValue !== undefined && lastValue !== null) {\n      if (typeof lastValue === 'object') {\n        if (lastValue.value !== undefined) {\n          // previously it was a shared value\n          value = lastValue.value;\n        } else if (lastValue.onFrame !== undefined) {\n          if (lastAnimation?.current !== undefined) {\n            // it was an animation before, copy its state\n            value = lastAnimation.current;\n          } else if (lastValue?.current !== undefined) {\n            // it was initialized\n            value = lastValue.current;\n          }\n        }\n      } else {\n        // previously it was a plain value, just set it as starting point\n        value = lastValue;\n      }\n    }\n\n    animation.callStart = (timestamp: Timestamp) => {\n      animation.onStart(animation, value, timestamp, lastAnimation);\n    };\n    animation.callStart(frameTimestamp);\n    animation.callStart = null;\n  } else if (typeof animatedProp === 'object') {\n    // it is an object\n    Object.keys(animatedProp).forEach((key) =>\n      prepareAnimation(\n        frameTimestamp,\n        animatedProp[key],\n        lastAnimation && lastAnimation[key],\n        lastValue && lastValue[key]\n      )\n    );\n  }\n}\n\nfunction runAnimations(\n  animation: AnimatedStyle<any>,\n  timestamp: Timestamp,\n  key: number | string,\n  result: AnimatedStyle<any>,\n  animationsActive: SharedValue<boolean>\n): boolean {\n  'worklet';\n  if (!animationsActive.value) {\n    return true;\n  }\n  if (Array.isArray(animation)) {\n    result[key] = [];\n    let allFinished = true;\n    animation.forEach((entry, index) => {\n      if (\n        !runAnimations(entry, timestamp, index, result[key], animationsActive)\n      ) {\n        allFinished = false;\n      }\n    });\n    return allFinished;\n  } else if (typeof animation === 'object' && animation.onFrame) {\n    let finished = true;\n    if (!animation.finished) {\n      if (animation.callStart) {\n        animation.callStart(timestamp);\n        animation.callStart = null;\n      }\n      finished = animation.onFrame(animation, timestamp);\n      animation.timestamp = timestamp;\n      if (finished) {\n        animation.finished = true;\n        animation.callback && animation.callback(true /* finished */);\n      }\n    }\n    result[key] = animation.current;\n    return finished;\n  } else if (typeof animation === 'object') {\n    result[key] = {};\n    let allFinished = true;\n    Object.keys(animation).forEach((k) => {\n      if (\n        !runAnimations(\n          animation[k],\n          timestamp,\n          k,\n          result[key],\n          animationsActive\n        )\n      ) {\n        allFinished = false;\n      }\n    });\n    return allFinished;\n  } else {\n    result[key] = animation;\n    return true;\n  }\n}\n\nfunction styleUpdater(\n  viewDescriptors: SharedValue<Descriptor[]>,\n  updater: WorkletFunction<[], AnimatedStyle<any>> | (() => AnimatedStyle<any>),\n  state: AnimatedState,\n  maybeViewRef: ViewRefSet<any> | undefined,\n  animationsActive: SharedValue<boolean>,\n  isAnimatedProps = false\n): void {\n  'worklet';\n  const animations = state.animations ?? {};\n  const newValues = updater() ?? {};\n  const oldValues = state.last;\n  const nonAnimatedNewValues: StyleProps = {};\n\n  let hasAnimations = false;\n  let frameTimestamp: number | undefined;\n  let hasNonAnimatedValues = false;\n  for (const key in newValues) {\n    const value = newValues[key];\n    if (isAnimated(value)) {\n      frameTimestamp =\n        global.__frameTimestamp || global._getAnimationTimestamp();\n      prepareAnimation(frameTimestamp, value, animations[key], oldValues[key]);\n      animations[key] = value;\n      hasAnimations = true;\n    } else {\n      hasNonAnimatedValues = true;\n      nonAnimatedNewValues[key] = value;\n      delete animations[key];\n    }\n  }\n\n  if (hasAnimations) {\n    const frame = (timestamp: Timestamp) => {\n      // eslint-disable-next-line @typescript-eslint/no-shadow\n      const { animations, last, isAnimationCancelled } = state;\n      if (isAnimationCancelled) {\n        state.isAnimationRunning = false;\n        return;\n      }\n\n      const updates: AnimatedStyle<any> = {};\n      let allFinished = true;\n      for (const propName in animations) {\n        const finished = runAnimations(\n          animations[propName],\n          timestamp,\n          propName,\n          updates,\n          animationsActive\n        );\n        if (finished) {\n          last[propName] = updates[propName];\n          delete animations[propName];\n        } else {\n          allFinished = false;\n        }\n      }\n\n      if (updates) {\n        updateProps(viewDescriptors, updates, maybeViewRef);\n      }\n\n      if (!allFinished) {\n        requestAnimationFrame(frame);\n      } else {\n        state.isAnimationRunning = false;\n      }\n    };\n\n    state.animations = animations;\n    if (!state.isAnimationRunning) {\n      state.isAnimationCancelled = false;\n      state.isAnimationRunning = true;\n      frame(frameTimestamp!);\n    }\n\n    if (hasNonAnimatedValues) {\n      updateProps(viewDescriptors, nonAnimatedNewValues, maybeViewRef);\n    }\n  } else {\n    state.isAnimationCancelled = true;\n    state.animations = [];\n\n    if (!shallowEqual(oldValues, newValues)) {\n      updateProps(viewDescriptors, newValues, maybeViewRef, isAnimatedProps);\n    }\n  }\n  state.last = newValues;\n}\n\nfunction jestStyleUpdater(\n  viewDescriptors: SharedValue<Descriptor[]>,\n  updater: WorkletFunction<[], AnimatedStyle<any>> | (() => AnimatedStyle<any>),\n  state: AnimatedState,\n  maybeViewRef: ViewRefSet<any> | undefined,\n  animationsActive: SharedValue<boolean>,\n  animatedStyle: MutableRefObject<AnimatedStyle<any>>,\n  adapters: AnimatedPropsAdapterFunction[]\n): void {\n  'worklet';\n  const animations: AnimatedStyle<any> = state.animations ?? {};\n  const newValues = updater() ?? {};\n  const oldValues = state.last;\n\n  // extract animated props\n  let hasAnimations = false;\n  let frameTimestamp: number | undefined;\n  Object.keys(animations).forEach((key) => {\n    const value = newValues[key];\n    if (!isAnimated(value)) {\n      delete animations[key];\n    }\n  });\n  Object.keys(newValues).forEach((key) => {\n    const value = newValues[key];\n    if (isAnimated(value)) {\n      frameTimestamp =\n        global.__frameTimestamp || global._getAnimationTimestamp();\n      prepareAnimation(frameTimestamp, value, animations[key], oldValues[key]);\n      animations[key] = value;\n      hasAnimations = true;\n    }\n  });\n\n  function frame(timestamp: Timestamp) {\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    const { animations, last, isAnimationCancelled } = state;\n    if (isAnimationCancelled) {\n      state.isAnimationRunning = false;\n      return;\n    }\n\n    const updates: AnimatedStyle<any> = {};\n    let allFinished = true;\n    Object.keys(animations).forEach((propName) => {\n      const finished = runAnimations(\n        animations[propName],\n        timestamp,\n        propName,\n        updates,\n        animationsActive\n      );\n      if (finished) {\n        last[propName] = updates[propName];\n        delete animations[propName];\n      } else {\n        allFinished = false;\n      }\n    });\n\n    if (Object.keys(updates).length) {\n      updatePropsJestWrapper(\n        viewDescriptors,\n        updates,\n        maybeViewRef,\n        animatedStyle,\n        adapters\n      );\n    }\n\n    if (!allFinished) {\n      requestAnimationFrame(frame);\n    } else {\n      state.isAnimationRunning = false;\n    }\n  }\n\n  if (hasAnimations) {\n    state.animations = animations;\n    if (!state.isAnimationRunning) {\n      state.isAnimationCancelled = false;\n      state.isAnimationRunning = true;\n      frame(frameTimestamp!);\n    }\n  } else {\n    state.isAnimationCancelled = true;\n    state.animations = [];\n  }\n\n  // calculate diff\n  state.last = newValues;\n\n  if (!shallowEqual(oldValues, newValues)) {\n    updatePropsJestWrapper(\n      viewDescriptors,\n      newValues,\n      maybeViewRef,\n      animatedStyle,\n      adapters\n    );\n  }\n}\n\n// check for invalid usage of shared values in returned object\nfunction checkSharedValueUsage(\n  prop: NestedObjectValues<AnimationObject>,\n  currentKey?: string\n): void {\n  if (Array.isArray(prop)) {\n    // if it's an array (i.ex. transform) validate all its elements\n    for (const element of prop) {\n      checkSharedValueUsage(element, currentKey);\n    }\n  } else if (\n    typeof prop === 'object' &&\n    prop !== null &&\n    prop.value === undefined\n  ) {\n    // if it's a nested object, run validation for all its props\n    for (const key of Object.keys(prop)) {\n      checkSharedValueUsage(prop[key], key);\n    }\n  } else if (\n    currentKey !== undefined &&\n    typeof prop === 'object' &&\n    prop !== null &&\n    prop.value !== undefined\n  ) {\n    // if shared value is passed insted of its value, throw an error\n    throw new Error(\n      `[Reanimated] Invalid value passed to \\`${currentKey}\\`, maybe you forgot to use \\`.value\\`?`\n    );\n  }\n}\n\n/**\n * Lets you create a styles object, similar to StyleSheet styles, which can be animated using shared values.\n *\n * @param updater - A function returning an object with style properties you want to animate.\n * @param dependencies - An optional array of dependencies. Only relevant when using Reanimated without the Babel plugin on the Web.\n * @returns An animated style object which has to be passed to the `style` property of an Animated component you want to animate.\n * @see https://docs.swmansion.com/react-native-reanimated/docs/core/useAnimatedStyle\n */\n// You cannot pass Shared Values to `useAnimatedStyle` directly.\n// @ts-expect-error This overload is required by our API.\nexport function useAnimatedStyle<Style extends DefaultStyle>(\n  updater: () => Style,\n  dependencies?: DependencyList | null\n): Style;\n\nexport function useAnimatedStyle<Style extends DefaultStyle>(\n  updater:\n    | WorkletFunction<[], Style>\n    | ((() => Style) & Record<string, unknown>),\n  dependencies?: DependencyList | null,\n  adapters?: AnimatedPropsAdapterWorklet | AnimatedPropsAdapterWorklet[] | null,\n  isAnimatedProps = false\n): AnimatedStyleHandle<Style> | JestAnimatedStyleHandle<Style> {\n  const viewsRef: ViewRefSet<unknown> | undefined = useViewRefSet();\n  const animatedUpdaterData = useRef<AnimatedUpdaterData>();\n  let inputs = Object.values(updater.__closure ?? {});\n  if (SHOULD_BE_USE_WEB) {\n    if (!inputs.length && dependencies?.length) {\n      // let web work without a Babel plugin\n      inputs = dependencies;\n    }\n    if (\n      __DEV__ &&\n      !inputs.length &&\n      !dependencies &&\n      !isWorkletFunction(updater)\n    ) {\n      throw new Error(\n        `[Reanimated] \\`useAnimatedStyle\\` was used without a dependency array or Babel plugin. Please explicitly pass a dependency array, or enable the Babel plugin.\nFor more, see the docs: \\`https://docs.swmansion.com/react-native-reanimated/docs/guides/web-support#web-without-the-babel-plugin\\`.`\n      );\n    }\n  }\n  const adaptersArray = adapters\n    ? Array.isArray(adapters)\n      ? adapters\n      : [adapters]\n    : [];\n  const adaptersHash = adapters ? buildWorkletsHash(adaptersArray) : null;\n  const areAnimationsActive = useSharedValue<boolean>(true);\n  const jestAnimatedStyle = useRef<Style>({} as Style);\n\n  // build dependencies\n  if (!dependencies) {\n    dependencies = [...inputs, updater.__workletHash];\n  } else {\n    dependencies.push(updater.__workletHash);\n  }\n  adaptersHash && dependencies.push(adaptersHash);\n\n  if (!animatedUpdaterData.current) {\n    const initialStyle = initialUpdaterRun(updater);\n    if (__DEV__) {\n      validateAnimatedStyles(initialStyle);\n    }\n    animatedUpdaterData.current = {\n      initial: {\n        value: initialStyle,\n        updater,\n      },\n      remoteState: makeShareable({\n        last: initialStyle,\n        animations: {},\n        isAnimationCancelled: false,\n        isAnimationRunning: false,\n      }),\n      viewDescriptors: makeViewDescriptorsSet(),\n    };\n  }\n\n  const { initial, remoteState, viewDescriptors } = animatedUpdaterData.current;\n  const shareableViewDescriptors = viewDescriptors.shareableViewDescriptors;\n\n  dependencies.push(shareableViewDescriptors);\n\n  useEffect(() => {\n    let fun;\n    let updaterFn = updater;\n    if (adapters) {\n      updaterFn = (() => {\n        'worklet';\n        const newValues = updater();\n        adaptersArray.forEach((adapter) => {\n          adapter(newValues as Record<string, unknown>);\n        });\n        return newValues;\n      }) as WorkletFunction<[], Style>;\n    }\n\n    if (isJest()) {\n      fun = () => {\n        'worklet';\n        jestStyleUpdater(\n          shareableViewDescriptors,\n          updater,\n          remoteState,\n          viewsRef,\n          areAnimationsActive,\n          jestAnimatedStyle,\n          adaptersArray\n        );\n      };\n    } else {\n      fun = () => {\n        'worklet';\n        styleUpdater(\n          shareableViewDescriptors,\n          updaterFn,\n          remoteState,\n          viewsRef,\n          areAnimationsActive,\n          isAnimatedProps\n        );\n      };\n    }\n    const mapperId = startMapper(fun, inputs);\n    return () => {\n      stopMapper(mapperId);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, dependencies);\n\n  useEffect(() => {\n    areAnimationsActive.value = true;\n    return () => {\n      areAnimationsActive.value = false;\n    };\n  }, [areAnimationsActive]);\n\n  checkSharedValueUsage(initial.value);\n\n  const animatedStyleHandle = useRef<\n    AnimatedStyleHandle<Style> | JestAnimatedStyleHandle<Style> | null\n  >(null);\n\n  if (!animatedStyleHandle.current) {\n    animatedStyleHandle.current = isJest()\n      ? { viewDescriptors, initial, viewsRef, jestAnimatedStyle }\n      : { initial, viewsRef, viewDescriptors };\n  }\n\n  return animatedStyleHandle.current;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}