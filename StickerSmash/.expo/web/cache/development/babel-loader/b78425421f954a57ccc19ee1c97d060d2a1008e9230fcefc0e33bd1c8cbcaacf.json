{"ast":null,"code":"'use strict';\n\nimport _defineProperty2 from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nimport { Easing } from \"../../Easing\";\nimport { withDelay, withSequence, withTiming } from \"../../animation\";\nimport { ReduceMotion } from \"../../commonTypes\";\nimport { assertEasingIsWorklet, getReduceMotionFromConfig } from \"../../animation/util\";\nvar InnerKeyframe = function () {\n  function InnerKeyframe(definitions) {\n    var _this = this;\n    _classCallCheck(this, InnerKeyframe);\n    _defineProperty(this, \"durationV\", void 0);\n    _defineProperty(this, \"delayV\", void 0);\n    _defineProperty(this, \"reduceMotionV\", ReduceMotion.System);\n    _defineProperty(this, \"callbackV\", void 0);\n    _defineProperty(this, \"definitions\", void 0);\n    _defineProperty(this, \"build\", function () {\n      var delay = _this.delayV;\n      var delayFunction = _this.getDelayFunction();\n      var _this$parseDefinition = _this.parseDefinitions(),\n        keyframes = _this$parseDefinition.keyframes,\n        initialValues = _this$parseDefinition.initialValues;\n      var callback = _this.callbackV;\n      return function () {\n        'worklet';\n\n        var animations = {};\n        var addAnimation = function addAnimation(key) {\n          var keyframePoints = keyframes[key];\n          if (keyframePoints.length === 0) {\n            return;\n          }\n          var animation = delayFunction(delay, keyframePoints.length === 1 ? withTiming(keyframePoints[0].value, {\n            duration: keyframePoints[0].duration,\n            easing: keyframePoints[0].easing ? keyframePoints[0].easing : Easing.linear\n          }) : withSequence.apply(void 0, _toConsumableArray(keyframePoints.map(function (keyframePoint) {\n            return withTiming(keyframePoint.value, {\n              duration: keyframePoint.duration,\n              easing: keyframePoint.easing ? keyframePoint.easing : Easing.linear\n            });\n          }))));\n          if (key.includes('transform')) {\n            if (!('transform' in animations)) {\n              animations.transform = [];\n            }\n            animations.transform.push(_defineProperty2({}, key.split(':')[1], animation));\n          } else {\n            animations[key] = animation;\n          }\n        };\n        Object.keys(initialValues).forEach(function (key) {\n          if (key.includes('transform')) {\n            initialValues[key].forEach(function (transformProp, index) {\n              Object.keys(transformProp).forEach(function (transformPropKey) {\n                addAnimation(makeKeyframeKey(index, transformPropKey));\n              });\n            });\n          } else {\n            addAnimation(key);\n          }\n        });\n        return {\n          animations: animations,\n          initialValues: initialValues,\n          callback: callback\n        };\n      };\n    });\n    this.definitions = definitions;\n  }\n  return _createClass(InnerKeyframe, [{\n    key: \"parseDefinitions\",\n    value: function parseDefinitions() {\n      var _this2 = this;\n      var parsedKeyframes = {};\n      if (this.definitions.from) {\n        if (this.definitions['0']) {\n          throw new Error(\"[Reanimated] You cannot provide both keyframe 0 and 'from' as they both specified initial values.\");\n        }\n        this.definitions['0'] = this.definitions.from;\n        delete this.definitions.from;\n      }\n      if (this.definitions.to) {\n        if (this.definitions['100']) {\n          throw new Error(\"[Reanimated] You cannot provide both keyframe 100 and 'to' as they both specified values at the end of the animation.\");\n        }\n        this.definitions['100'] = this.definitions.to;\n        delete this.definitions.to;\n      }\n      if (!this.definitions['0']) {\n        throw new Error(\"[Reanimated] Please provide 0 or 'from' keyframe with initial state of your object.\");\n      }\n      var initialValues = this.definitions['0'];\n      Object.keys(initialValues).forEach(function (styleProp) {\n        if (styleProp === 'transform') {\n          if (!Array.isArray(initialValues.transform)) {\n            return;\n          }\n          initialValues.transform.forEach(function (transformStyle, index) {\n            Object.keys(transformStyle).forEach(function (transformProp) {\n              parsedKeyframes[makeKeyframeKey(index, transformProp)] = [];\n            });\n          });\n        } else {\n          parsedKeyframes[styleProp] = [];\n        }\n      });\n      var duration = this.durationV ? this.durationV : 500;\n      var animationKeyPoints = Array.from(Object.keys(this.definitions));\n      var getAnimationDuration = function getAnimationDuration(key, currentKeyPoint) {\n        var maxDuration = currentKeyPoint / 100 * duration;\n        var currentDuration = parsedKeyframes[key].reduce(function (acc, value) {\n          return acc + value.duration;\n        }, 0);\n        return maxDuration - currentDuration;\n      };\n      var addKeyPoint = function addKeyPoint(_ref) {\n        var key = _ref.key,\n          value = _ref.value,\n          currentKeyPoint = _ref.currentKeyPoint,\n          easing = _ref.easing;\n        if (!(key in parsedKeyframes)) {\n          throw new Error(\"[Reanimated] Keyframe can contain only that set of properties that were provide with initial values (keyframe 0 or 'from')\");\n        }\n        if (__DEV__ && easing) {\n          assertEasingIsWorklet(easing);\n        }\n        parsedKeyframes[key].push({\n          duration: getAnimationDuration(key, currentKeyPoint),\n          value: value,\n          easing: easing\n        });\n      };\n      animationKeyPoints.filter(function (value) {\n        return parseInt(value) !== 0;\n      }).sort(function (a, b) {\n        return parseInt(a) - parseInt(b);\n      }).forEach(function (keyPoint) {\n        if (parseInt(keyPoint) < 0 || parseInt(keyPoint) > 100) {\n          throw new Error('[Reanimated] Keyframe should be in between range 0 - 100.');\n        }\n        var keyframe = _this2.definitions[keyPoint];\n        var easing = keyframe.easing;\n        delete keyframe.easing;\n        var addKeyPointWith = function addKeyPointWith(key, value) {\n          return addKeyPoint({\n            key: key,\n            value: value,\n            currentKeyPoint: parseInt(keyPoint),\n            easing: easing\n          });\n        };\n        Object.keys(keyframe).forEach(function (key) {\n          if (key === 'transform') {\n            if (!Array.isArray(keyframe.transform)) {\n              return;\n            }\n            keyframe.transform.forEach(function (transformStyle, index) {\n              Object.keys(transformStyle).forEach(function (transformProp) {\n                addKeyPointWith(makeKeyframeKey(index, transformProp), transformStyle[transformProp]);\n              });\n            });\n          } else {\n            addKeyPointWith(key, keyframe[key]);\n          }\n        });\n      });\n      return {\n        initialValues: initialValues,\n        keyframes: parsedKeyframes\n      };\n    }\n  }, {\n    key: \"duration\",\n    value: function duration(durationMs) {\n      this.durationV = durationMs;\n      return this;\n    }\n  }, {\n    key: \"delay\",\n    value: function delay(delayMs) {\n      this.delayV = delayMs;\n      return this;\n    }\n  }, {\n    key: \"withCallback\",\n    value: function withCallback(callback) {\n      this.callbackV = callback;\n      return this;\n    }\n  }, {\n    key: \"reduceMotion\",\n    value: function reduceMotion(reduceMotionV) {\n      this.reduceMotionV = reduceMotionV;\n      return this;\n    }\n  }, {\n    key: \"getDelayFunction\",\n    value: function getDelayFunction() {\n      var delay = this.delayV;\n      var reduceMotion = this.reduceMotionV;\n      return delay ? function (delay, animation) {\n        'worklet';\n\n        return withDelay(delay, animation, reduceMotion);\n      } : function (_, animation) {\n        'worklet';\n\n        animation.reduceMotion = getReduceMotionFromConfig(reduceMotion);\n        return animation;\n      };\n    }\n  }]);\n}();\nfunction makeKeyframeKey(index, transformProp) {\n  'worklet';\n\n  return index + \"_transform:\" + transformProp;\n}\nexport var Keyframe = InnerKeyframe;","map":{"version":3,"names":["_defineProperty2","_toConsumableArray","_classCallCheck","_createClass","_defineProperty","obj","key","value","_toPropertyKey","Object","defineProperty","enumerable","configurable","writable","t","i","_toPrimitive","r","e","Symbol","toPrimitive","call","TypeError","String","Number","Easing","withDelay","withSequence","withTiming","ReduceMotion","assertEasingIsWorklet","getReduceMotionFromConfig","InnerKeyframe","definitions","_this","System","delay","delayV","delayFunction","getDelayFunction","_this$parseDefinition","parseDefinitions","keyframes","initialValues","callback","callbackV","animations","addAnimation","keyframePoints","length","animation","duration","easing","linear","apply","map","keyframePoint","includes","transform","push","split","keys","forEach","transformProp","index","transformPropKey","makeKeyframeKey","_this2","parsedKeyframes","from","Error","to","styleProp","Array","isArray","transformStyle","durationV","animationKeyPoints","getAnimationDuration","currentKeyPoint","maxDuration","currentDuration","reduce","acc","addKeyPoint","_ref","__DEV__","filter","parseInt","sort","a","b","keyPoint","keyframe","addKeyPointWith","durationMs","delayMs","withCallback","reduceMotion","reduceMotionV","_","Keyframe"],"sources":["/Users/xd/Desktop/study/react/react-project/StickerSmash/node_modules/react-native-reanimated/lib/module/reanimated2/layoutReanimation/animationBuilder/Keyframe.ts"],"sourcesContent":["'use strict';\nimport type { EasingFunction } from '../../Easing';\nimport { Easing } from '../../Easing';\nimport { withDelay, withSequence, withTiming } from '../../animation';\nimport type {\n  AnimationFunction,\n  EntryExitAnimationFunction,\n  IEntryExitAnimationBuilder,\n  KeyframeProps,\n  StylePropsWithArrayTransform,\n} from './commonTypes';\nimport type { StyleProps } from '../../commonTypes';\nimport type { TransformArrayItem } from '../../helperTypes';\nimport { ReduceMotion } from '../../commonTypes';\nimport {\n  assertEasingIsWorklet,\n  getReduceMotionFromConfig,\n} from '../../animation/util';\n\ninterface KeyframePoint {\n  duration: number;\n  value: number | string;\n  easing?: EasingFunction;\n}\ninterface ParsedKeyframesDefinition {\n  initialValues: StyleProps;\n  keyframes: Record<string, KeyframePoint[]>;\n}\nclass InnerKeyframe implements IEntryExitAnimationBuilder {\n  durationV?: number;\n  delayV?: number;\n  reduceMotionV: ReduceMotion = ReduceMotion.System;\n  callbackV?: (finished: boolean) => void;\n  definitions: Record<string, KeyframeProps>;\n\n  /*\n    Keyframe definition should be passed in the constructor as the map\n    which keys are between range 0 - 100 (%) and correspond to the point in the animation progress.\n  */\n  constructor(definitions: Record<string, KeyframeProps>) {\n    this.definitions = definitions;\n  }\n\n  private parseDefinitions(): ParsedKeyframesDefinition {\n    /* \n        Each style property contain an array with all their key points: \n        value, duration of transition to that value, and optional easing function (defaults to Linear)\n    */\n    const parsedKeyframes: Record<string, KeyframePoint[]> = {};\n    /*\n      Parsing keyframes 'from' and 'to'.\n    */\n    if (this.definitions.from) {\n      if (this.definitions['0']) {\n        throw new Error(\n          \"[Reanimated] You cannot provide both keyframe 0 and 'from' as they both specified initial values.\"\n        );\n      }\n      this.definitions['0'] = this.definitions.from;\n      delete this.definitions.from;\n    }\n    if (this.definitions.to) {\n      if (this.definitions['100']) {\n        throw new Error(\n          \"[Reanimated] You cannot provide both keyframe 100 and 'to' as they both specified values at the end of the animation.\"\n        );\n      }\n      this.definitions['100'] = this.definitions.to;\n      delete this.definitions.to;\n    }\n    /* \n       One of the assumptions is that keyframe  0 is required to properly set initial values.\n       Every other keyframe should contain properties from the set provided as initial values.\n    */\n    if (!this.definitions['0']) {\n      throw new Error(\n        \"[Reanimated] Please provide 0 or 'from' keyframe with initial state of your object.\"\n      );\n    }\n    const initialValues: StyleProps = this.definitions['0'] as StyleProps;\n    /*\n      Initialize parsedKeyframes for properties provided in initial keyframe\n    */\n    Object.keys(initialValues).forEach((styleProp: string) => {\n      if (styleProp === 'transform') {\n        if (!Array.isArray(initialValues.transform)) {\n          return;\n        }\n        initialValues.transform.forEach((transformStyle, index) => {\n          Object.keys(transformStyle).forEach((transformProp: string) => {\n            parsedKeyframes[makeKeyframeKey(index, transformProp)] = [];\n          });\n        });\n      } else {\n        parsedKeyframes[styleProp] = [];\n      }\n    });\n\n    const duration: number = this.durationV ? this.durationV : 500;\n    const animationKeyPoints: Array<string> = Array.from(\n      Object.keys(this.definitions)\n    );\n\n    const getAnimationDuration = (\n      key: string,\n      currentKeyPoint: number\n    ): number => {\n      const maxDuration = (currentKeyPoint / 100) * duration;\n      const currentDuration = parsedKeyframes[key].reduce(\n        (acc: number, value: KeyframePoint) => acc + value.duration,\n        0\n      );\n      return maxDuration - currentDuration;\n    };\n\n    /* \n       Other keyframes can't contain properties that were not specified in initial keyframe.\n    */\n    const addKeyPoint = ({\n      key,\n      value,\n      currentKeyPoint,\n      easing,\n    }: {\n      key: string;\n      value: string | number;\n      currentKeyPoint: number;\n      easing?: EasingFunction;\n    }): void => {\n      if (!(key in parsedKeyframes)) {\n        throw new Error(\n          \"[Reanimated] Keyframe can contain only that set of properties that were provide with initial values (keyframe 0 or 'from')\"\n        );\n      }\n\n      if (__DEV__ && easing) {\n        assertEasingIsWorklet(easing);\n      }\n\n      parsedKeyframes[key].push({\n        duration: getAnimationDuration(key, currentKeyPoint),\n        value,\n        easing,\n      });\n    };\n    animationKeyPoints\n      .filter((value: string) => parseInt(value) !== 0)\n      .sort((a: string, b: string) => parseInt(a) - parseInt(b))\n      .forEach((keyPoint: string) => {\n        if (parseInt(keyPoint) < 0 || parseInt(keyPoint) > 100) {\n          throw new Error(\n            '[Reanimated] Keyframe should be in between range 0 - 100.'\n          );\n        }\n        const keyframe: KeyframeProps = this.definitions[keyPoint];\n        const easing = keyframe.easing;\n        delete keyframe.easing;\n        const addKeyPointWith = (key: string, value: string | number) =>\n          addKeyPoint({\n            key,\n            value,\n            currentKeyPoint: parseInt(keyPoint),\n            easing,\n          });\n        Object.keys(keyframe).forEach((key: string) => {\n          if (key === 'transform') {\n            if (!Array.isArray(keyframe.transform)) {\n              return;\n            }\n            keyframe.transform.forEach((transformStyle, index) => {\n              Object.keys(transformStyle).forEach((transformProp: string) => {\n                addKeyPointWith(\n                  makeKeyframeKey(index, transformProp),\n                  transformStyle[\n                    transformProp as keyof typeof transformStyle\n                  ] as number | string // Here we assume that user has passed props of proper type.\n                  // I don't think it's worthwhile to check if he passed i.e. `Animated.Node`.\n                );\n              });\n            });\n          } else {\n            addKeyPointWith(key, keyframe[key]);\n          }\n        });\n      });\n    return { initialValues, keyframes: parsedKeyframes };\n  }\n\n  duration(durationMs: number): InnerKeyframe {\n    this.durationV = durationMs;\n    return this;\n  }\n\n  delay(delayMs: number): InnerKeyframe {\n    this.delayV = delayMs;\n    return this;\n  }\n\n  withCallback(callback: (finsihed: boolean) => void): InnerKeyframe {\n    this.callbackV = callback;\n    return this;\n  }\n\n  reduceMotion(reduceMotionV: ReduceMotion): this {\n    this.reduceMotionV = reduceMotionV;\n    return this;\n  }\n\n  private getDelayFunction(): AnimationFunction {\n    const delay = this.delayV;\n    const reduceMotion = this.reduceMotionV;\n    return delay\n      ? // eslint-disable-next-line @typescript-eslint/no-shadow\n        (delay, animation) => {\n          'worklet';\n          return withDelay(delay, animation, reduceMotion);\n        }\n      : (_, animation) => {\n          'worklet';\n          animation.reduceMotion = getReduceMotionFromConfig(reduceMotion);\n          return animation;\n        };\n  }\n\n  build = (): EntryExitAnimationFunction => {\n    const delay = this.delayV;\n    const delayFunction = this.getDelayFunction();\n    const { keyframes, initialValues } = this.parseDefinitions();\n    const callback = this.callbackV;\n\n    return () => {\n      'worklet';\n      const animations: StylePropsWithArrayTransform = {};\n\n      /* \n            For each style property, an animations sequence is created that corresponds with its key points.\n            Transform style properties require special handling because of their nested structure.\n      */\n      const addAnimation = (key: string) => {\n        const keyframePoints = keyframes[key];\n        // in case if property was only passed as initial value\n        if (keyframePoints.length === 0) {\n          return;\n        }\n        const animation = delayFunction(\n          delay,\n          keyframePoints.length === 1\n            ? withTiming(keyframePoints[0].value, {\n                duration: keyframePoints[0].duration,\n                easing: keyframePoints[0].easing\n                  ? keyframePoints[0].easing\n                  : Easing.linear,\n              })\n            : withSequence(\n                ...keyframePoints.map((keyframePoint: KeyframePoint) =>\n                  withTiming(keyframePoint.value, {\n                    duration: keyframePoint.duration,\n                    easing: keyframePoint.easing\n                      ? keyframePoint.easing\n                      : Easing.linear,\n                  })\n                )\n              )\n        );\n        if (key.includes('transform')) {\n          if (!('transform' in animations)) {\n            animations.transform = [];\n          }\n          animations.transform!.push(<TransformArrayItem>{\n            [key.split(':')[1]]: animation,\n          });\n        } else {\n          animations[key] = animation;\n        }\n      };\n      Object.keys(initialValues).forEach((key: string) => {\n        if (key.includes('transform')) {\n          initialValues[key].forEach(\n            (transformProp: Record<string, number | string>, index: number) => {\n              Object.keys(transformProp).forEach((transformPropKey: string) => {\n                addAnimation(makeKeyframeKey(index, transformPropKey));\n              });\n            }\n          );\n        } else {\n          addAnimation(key);\n        }\n      });\n      return {\n        animations,\n        initialValues,\n        callback,\n      };\n    };\n  };\n}\n\nfunction makeKeyframeKey(index: number, transformProp: string) {\n  'worklet';\n  return `${index}_transform:${transformProp}`;\n}\n\n// TODO TYPESCRIPT This is a temporary type to get rid of .d.ts file.\nexport declare class ReanimatedKeyframe {\n  constructor(definitions: Record<string, KeyframeProps>);\n  duration(durationMs: number): ReanimatedKeyframe;\n  delay(delayMs: number): ReanimatedKeyframe;\n  reduceMotion(reduceMotionV: ReduceMotion): ReanimatedKeyframe;\n  withCallback(callback: (finished: boolean) => void): ReanimatedKeyframe;\n}\n\n// TODO TYPESCRIPT This temporary cast is to get rid of .d.ts file.\nexport const Keyframe = InnerKeyframe as unknown as typeof ReanimatedKeyframe;\n"],"mappings":"AAAA,YAAY;;AAAA,OAAAA,gBAAA;AAAA,OAAAC,kBAAA;AAAA,OAAAC,eAAA;AAAA,OAAAC,YAAA;AAAC,SAAAC,gBAAAC,GAAA,EAAAC,GAAA,EAAAC,KAAA;EAAAD,GAAA,GAAAE,cAAA,CAAAF,GAAA;EAAA,IAAAA,GAAA,IAAAD,GAAA;IAAAI,MAAA,CAAAC,cAAA,CAAAL,GAAA,EAAAC,GAAA;MAAAC,KAAA,EAAAA,KAAA;MAAAI,UAAA;MAAAC,YAAA;MAAAC,QAAA;IAAA;EAAA;IAAAR,GAAA,CAAAC,GAAA,IAAAC,KAAA;EAAA;EAAA,OAAAF,GAAA;AAAA;AAAA,SAAAG,eAAAM,CAAA;EAAA,IAAAC,CAAA,GAAAC,YAAA,CAAAF,CAAA;EAAA,0BAAAC,CAAA,GAAAA,CAAA,GAAAA,CAAA;AAAA;AAAA,SAAAC,aAAAF,CAAA,EAAAG,CAAA;EAAA,uBAAAH,CAAA,KAAAA,CAAA,SAAAA,CAAA;EAAA,IAAAI,CAAA,GAAAJ,CAAA,CAAAK,MAAA,CAAAC,WAAA;EAAA,eAAAF,CAAA;IAAA,IAAAH,CAAA,GAAAG,CAAA,CAAAG,IAAA,CAAAP,CAAA,EAAAG,CAAA;IAAA,uBAAAF,CAAA,SAAAA,CAAA;IAAA,UAAAO,SAAA;EAAA;EAAA,qBAAAL,CAAA,GAAAM,MAAA,GAAAC,MAAA,EAAAV,CAAA;AAAA;AAEb,SAASW,MAAM;AACf,SAASC,SAAS,EAAEC,YAAY,EAAEC,UAAU;AAU5C,SAASC,YAAY;AACrB,SACEC,qBAAqB,EACrBC,yBAAyB;AACE,IAWvBC,aAAa;EAWjB,SAAAA,cAAYC,WAA0C,EAAE;IAAA,IAAAC,KAAA;IAAAhC,eAAA,OAAA8B,aAAA;IAAA5B,eAAA;IAAAA,eAAA;IAAAA,eAAA,wBAR1ByB,YAAY,CAACM,MAAM;IAAA/B,eAAA;IAAAA,eAAA;IAAAA,eAAA,gBAiMzC,YAAkC;MACxC,IAAMgC,KAAK,GAAGF,KAAI,CAACG,MAAM;MACzB,IAAMC,aAAa,GAAGJ,KAAI,CAACK,gBAAgB,CAAC,CAAC;MAC7C,IAAAC,qBAAA,GAAqCN,KAAI,CAACO,gBAAgB,CAAC,CAAC;QAApDC,SAAS,GAAAF,qBAAA,CAATE,SAAS;QAAEC,aAAA,GAAAH,qBAAA,CAAAG,aAAA;MACnB,IAAMC,QAAQ,GAAGV,KAAI,CAACW,SAAS;MAE/B,OAAO,YAAM;QACX,SAAS;;QACT,IAAMC,UAAwC,GAAG,CAAC,CAAC;QAMnD,IAAMC,YAAY,GAAI,SAAhBA,YAAYA,CAAIzC,GAAW,EAAK;UACpC,IAAM0C,cAAc,GAAGN,SAAS,CAACpC,GAAG,CAAC;UAErC,IAAI0C,cAAc,CAACC,MAAM,KAAK,CAAC,EAAE;YAC/B;UACF;UACA,IAAMC,SAAS,GAAGZ,aAAa,CAC7BF,KAAK,EACLY,cAAc,CAACC,MAAM,KAAK,CAAC,GACvBrB,UAAU,CAACoB,cAAc,CAAC,CAAC,CAAC,CAACzC,KAAK,EAAE;YAClC4C,QAAQ,EAAEH,cAAc,CAAC,CAAC,CAAC,CAACG,QAAQ;YACpCC,MAAM,EAAEJ,cAAc,CAAC,CAAC,CAAC,CAACI,MAAM,GAC5BJ,cAAc,CAAC,CAAC,CAAC,CAACI,MAAM,GACxB3B,MAAM,CAAC4B;UACb,CAAC,CAAC,GACF1B,YAAY,CAAA2B,KAAA,SAAArD,kBAAA,CACP+C,cAAc,CAACO,GAAG,CAAE,UAAAC,aAA4B;YAAA,OACjD5B,UAAU,CAAC4B,aAAa,CAACjD,KAAK,EAAE;cAC9B4C,QAAQ,EAAEK,aAAa,CAACL,QAAQ;cAChCC,MAAM,EAAEI,aAAa,CAACJ,MAAM,GACxBI,aAAa,CAACJ,MAAM,GACpB3B,MAAM,CAAC4B;YACb,CAAC,CACH;UAAA,EACF,EACN,CAAC;UACD,IAAI/C,GAAG,CAACmD,QAAQ,CAAC,WAAW,CAAC,EAAE;YAC7B,IAAI,EAAE,WAAW,IAAIX,UAAU,CAAC,EAAE;cAChCA,UAAU,CAACY,SAAS,GAAG,EAAE;YAC3B;YACAZ,UAAU,CAACY,SAAS,CAAEC,IAAI,CAAA3D,gBAAA,KACvBM,GAAG,CAACsD,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAGV,SAAA,CACtB,CAAC;UACJ,CAAC,MAAM;YACLJ,UAAU,CAACxC,GAAG,CAAC,GAAG4C,SAAS;UAC7B;QACF,CAAC;QACDzC,MAAM,CAACoD,IAAI,CAAClB,aAAa,CAAC,CAACmB,OAAO,CAAE,UAAAxD,GAAW,EAAK;UAClD,IAAIA,GAAG,CAACmD,QAAQ,CAAC,WAAW,CAAC,EAAE;YAC7Bd,aAAa,CAACrC,GAAG,CAAC,CAACwD,OAAO,CACxB,UAACC,aAA8C,EAAEC,KAAa,EAAK;cACjEvD,MAAM,CAACoD,IAAI,CAACE,aAAa,CAAC,CAACD,OAAO,CAAE,UAAAG,gBAAwB,EAAK;gBAC/DlB,YAAY,CAACmB,eAAe,CAACF,KAAK,EAAEC,gBAAgB,CAAC,CAAC;cACxD,CAAC,CAAC;YACJ,CACF,CAAC;UACH,CAAC,MAAM;YACLlB,YAAY,CAACzC,GAAG,CAAC;UACnB;QACF,CAAC,CAAC;QACF,OAAO;UACLwC,UAAU,EAAVA,UAAU;UACVH,aAAa,EAAbA,aAAa;UACbC,QAAA,EAAAA;QACF,CAAC;MACH,CAAC;IACH,CAAC;IA9PC,IAAI,CAACX,WAAW,GAAGA,WAAW;EAChC;EAAA,OAAA9B,YAAA,CAAA6B,aAAA;IAAA1B,GAAA;IAAAC,KAAA,EAEQ,SAAAkC,gBAAgBA,CAAA,EAA8B;MAAA,IAAA0B,MAAA;MAKpD,IAAMC,eAAgD,GAAG,CAAC,CAAC;MAI3D,IAAI,IAAI,CAACnC,WAAW,CAACoC,IAAI,EAAE;QACzB,IAAI,IAAI,CAACpC,WAAW,CAAC,GAAG,CAAC,EAAE;UACzB,MAAM,IAAIqC,KAAK,CACb,mGACF,CAAC;QACH;QACA,IAAI,CAACrC,WAAW,CAAC,GAAG,CAAC,GAAG,IAAI,CAACA,WAAW,CAACoC,IAAI;QAC7C,OAAO,IAAI,CAACpC,WAAW,CAACoC,IAAI;MAC9B;MACA,IAAI,IAAI,CAACpC,WAAW,CAACsC,EAAE,EAAE;QACvB,IAAI,IAAI,CAACtC,WAAW,CAAC,KAAK,CAAC,EAAE;UAC3B,MAAM,IAAIqC,KAAK,CACb,uHACF,CAAC;QACH;QACA,IAAI,CAACrC,WAAW,CAAC,KAAK,CAAC,GAAG,IAAI,CAACA,WAAW,CAACsC,EAAE;QAC7C,OAAO,IAAI,CAACtC,WAAW,CAACsC,EAAE;MAC5B;MAKA,IAAI,CAAC,IAAI,CAACtC,WAAW,CAAC,GAAG,CAAC,EAAE;QAC1B,MAAM,IAAIqC,KAAK,CACb,qFACF,CAAC;MACH;MACA,IAAM3B,aAAyB,GAAG,IAAI,CAACV,WAAW,CAAC,GAAG,CAAe;MAIrExB,MAAM,CAACoD,IAAI,CAAClB,aAAa,CAAC,CAACmB,OAAO,CAAE,UAAAU,SAAiB,EAAK;QACxD,IAAIA,SAAS,KAAK,WAAW,EAAE;UAC7B,IAAI,CAACC,KAAK,CAACC,OAAO,CAAC/B,aAAa,CAACe,SAAS,CAAC,EAAE;YAC3C;UACF;UACAf,aAAa,CAACe,SAAS,CAACI,OAAO,CAAC,UAACa,cAAc,EAAEX,KAAK,EAAK;YACzDvD,MAAM,CAACoD,IAAI,CAACc,cAAc,CAAC,CAACb,OAAO,CAAE,UAAAC,aAAqB,EAAK;cAC7DK,eAAe,CAACF,eAAe,CAACF,KAAK,EAAED,aAAa,CAAC,CAAC,GAAG,EAAE;YAC7D,CAAC,CAAC;UACJ,CAAC,CAAC;QACJ,CAAC,MAAM;UACLK,eAAe,CAACI,SAAS,CAAC,GAAG,EAAE;QACjC;MACF,CAAC,CAAC;MAEF,IAAMrB,QAAgB,GAAG,IAAI,CAACyB,SAAS,GAAG,IAAI,CAACA,SAAS,GAAG,GAAG;MAC9D,IAAMC,kBAAiC,GAAGJ,KAAK,CAACJ,IAAI,CAClD5D,MAAM,CAACoD,IAAI,CAAC,IAAI,CAAC5B,WAAW,CAC9B,CAAC;MAED,IAAM6C,oBAAoB,GAAG,SAAvBA,oBAAoBA,CACxBxE,GAAW,EACXyE,eAAuB,EACZ;QACX,IAAMC,WAAW,GAAID,eAAe,GAAG,GAAG,GAAI5B,QAAQ;QACtD,IAAM8B,eAAe,GAAGb,eAAe,CAAC9D,GAAG,CAAC,CAAC4E,MAAM,CACjD,UAACC,GAAW,EAAE5E,KAAoB;UAAA,OAAK4E,GAAG,GAAG5E,KAAK,CAAC4C,QAAQ;QAAA,GAC3D,CACF,CAAC;QACD,OAAO6B,WAAW,GAAGC,eAAe;MACtC,CAAC;MAKD,IAAMG,WAAW,GAAG,SAAdA,WAAWA,CAAAC,IAAA,EAUL;QAAA,IATV/E,GAAG,GAAA+E,IAAA,CAAH/E,GAAG;UACHC,KAAK,GAAA8E,IAAA,CAAL9E,KAAK;UACLwE,eAAe,GAAAM,IAAA,CAAfN,eAAe;UACf3B,MAAA,GAAAiC,IAAA,CAAAjC,MAAA;QAOA,IAAI,EAAE9C,GAAG,IAAI8D,eAAe,CAAC,EAAE;UAC7B,MAAM,IAAIE,KAAK,CACb,4HACF,CAAC;QACH;QAEA,IAAIgB,OAAO,IAAIlC,MAAM,EAAE;UACrBtB,qBAAqB,CAACsB,MAAM,CAAC;QAC/B;QAEAgB,eAAe,CAAC9D,GAAG,CAAC,CAACqD,IAAI,CAAC;UACxBR,QAAQ,EAAE2B,oBAAoB,CAACxE,GAAG,EAAEyE,eAAe,CAAC;UACpDxE,KAAK,EAALA,KAAK;UACL6C,MAAA,EAAAA;QACF,CAAC,CAAC;MACJ,CAAC;MACDyB,kBAAkB,CACfU,MAAM,CAAE,UAAAhF,KAAa;QAAA,OAAKiF,QAAQ,CAACjF,KAAK,CAAC,KAAK,CAAC;MAAA,EAAC,CAChDkF,IAAI,CAAC,UAACC,CAAS,EAAEC,CAAS;QAAA,OAAKH,QAAQ,CAACE,CAAC,CAAC,GAAGF,QAAQ,CAACG,CAAC,CAAC;MAAA,EAAC,CACzD7B,OAAO,CAAE,UAAA8B,QAAgB,EAAK;QAC7B,IAAIJ,QAAQ,CAACI,QAAQ,CAAC,GAAG,CAAC,IAAIJ,QAAQ,CAACI,QAAQ,CAAC,GAAG,GAAG,EAAE;UACtD,MAAM,IAAItB,KAAK,CACb,2DACF,CAAC;QACH;QACA,IAAMuB,QAAuB,GAAG1B,MAAI,CAAClC,WAAW,CAAC2D,QAAQ,CAAC;QAC1D,IAAMxC,MAAM,GAAGyC,QAAQ,CAACzC,MAAM;QAC9B,OAAOyC,QAAQ,CAACzC,MAAM;QACtB,IAAM0C,eAAe,GAAG,SAAlBA,eAAeA,CAAIxF,GAAW,EAAEC,KAAsB;UAAA,OAC1D6E,WAAW,CAAC;YACV9E,GAAG,EAAHA,GAAG;YACHC,KAAK,EAALA,KAAK;YACLwE,eAAe,EAAES,QAAQ,CAACI,QAAQ,CAAC;YACnCxC,MAAA,EAAAA;UACF,CAAC,CAAC;QAAA;QACJ3C,MAAM,CAACoD,IAAI,CAACgC,QAAQ,CAAC,CAAC/B,OAAO,CAAE,UAAAxD,GAAW,EAAK;UAC7C,IAAIA,GAAG,KAAK,WAAW,EAAE;YACvB,IAAI,CAACmE,KAAK,CAACC,OAAO,CAACmB,QAAQ,CAACnC,SAAS,CAAC,EAAE;cACtC;YACF;YACAmC,QAAQ,CAACnC,SAAS,CAACI,OAAO,CAAC,UAACa,cAAc,EAAEX,KAAK,EAAK;cACpDvD,MAAM,CAACoD,IAAI,CAACc,cAAc,CAAC,CAACb,OAAO,CAAE,UAAAC,aAAqB,EAAK;gBAC7D+B,eAAe,CACb5B,eAAe,CAACF,KAAK,EAAED,aAAa,CAAC,EACrCY,cAAc,CACZZ,aAAa,CAGjB,CAAC;cACH,CAAC,CAAC;YACJ,CAAC,CAAC;UACJ,CAAC,MAAM;YACL+B,eAAe,CAACxF,GAAG,EAAEuF,QAAQ,CAACvF,GAAG,CAAC,CAAC;UACrC;QACF,CAAC,CAAC;MACJ,CAAC,CAAC;MACJ,OAAO;QAAEqC,aAAa,EAAbA,aAAa;QAAED,SAAS,EAAE0B;MAAgB,CAAC;IACtD;EAAA;IAAA9D,GAAA;IAAAC,KAAA,EAEA,SAAA4C,QAAQA,CAAC4C,UAAkB,EAAiB;MAC1C,IAAI,CAACnB,SAAS,GAAGmB,UAAU;MAC3B,OAAO,IAAI;IACb;EAAA;IAAAzF,GAAA;IAAAC,KAAA,EAEA,SAAA6B,KAAKA,CAAC4D,OAAe,EAAiB;MACpC,IAAI,CAAC3D,MAAM,GAAG2D,OAAO;MACrB,OAAO,IAAI;IACb;EAAA;IAAA1F,GAAA;IAAAC,KAAA,EAEA,SAAA0F,YAAYA,CAACrD,QAAqC,EAAiB;MACjE,IAAI,CAACC,SAAS,GAAGD,QAAQ;MACzB,OAAO,IAAI;IACb;EAAA;IAAAtC,GAAA;IAAAC,KAAA,EAEA,SAAA2F,YAAYA,CAACC,aAA2B,EAAQ;MAC9C,IAAI,CAACA,aAAa,GAAGA,aAAa;MAClC,OAAO,IAAI;IACb;EAAA;IAAA7F,GAAA;IAAAC,KAAA,EAEQ,SAAAgC,gBAAgBA,CAAA,EAAsB;MAC5C,IAAMH,KAAK,GAAG,IAAI,CAACC,MAAM;MACzB,IAAM6D,YAAY,GAAG,IAAI,CAACC,aAAa;MACvC,OAAO/D,KAAK,GAER,UAACA,KAAK,EAAEc,SAAS,EAAK;QACpB,SAAS;;QACT,OAAOxB,SAAS,CAACU,KAAK,EAAEc,SAAS,EAAEgD,YAAY,CAAC;MAClD,CAAC,GACD,UAACE,CAAC,EAAElD,SAAS,EAAK;QAChB,SAAS;;QACTA,SAAS,CAACgD,YAAY,GAAGnE,yBAAyB,CAACmE,YAAY,CAAC;QAChE,OAAOhD,SAAS;MAClB,CAAC;IACP;EAAA;AAAA;AA2EF,SAASgB,eAAeA,CAACF,KAAa,EAAED,aAAqB,EAAE;EAC7D,SAAS;;EACT,OAAUC,KAAM,mBAAaD,aAAc;AAC7C;AAYA,OAAO,IAAMsC,QAAQ,GAAGrE,aAAqD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}