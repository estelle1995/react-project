{"ast":null,"code":"'use strict';\n\nfunction _createForOfIteratorHelperLoose(r, e) { var t = \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (t) return (t = t.call(r)).next.bind(t); if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && \"number\" == typeof r.length) { t && (r = t); var o = 0; return function () { return o >= r.length ? { done: !0 } : { done: !1, value: r[o++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nimport { defineAnimation } from \"./util\";\nimport { withTiming } from \"./timing\";\nimport { ColorProperties, processColor } from \"../Colors\";\nfunction resolvePath(obj, path) {\n  'worklet';\n\n  var keys = Array.isArray(path) ? path : [path];\n  return keys.reduce(function (acc, current) {\n    if (Array.isArray(acc) && typeof current === 'number') {\n      return acc[current];\n    } else if (acc !== null && typeof acc === 'object' && current in acc) {\n      return acc[current];\n    }\n    return undefined;\n  }, obj);\n}\nfunction setPath(obj, path, value) {\n  'worklet';\n\n  var keys = Array.isArray(path) ? path : [path];\n  var currObj = obj;\n  for (var i = 0; i < keys.length - 1; i++) {\n    currObj = currObj;\n    if (!(keys[i] in currObj)) {\n      if (typeof keys[i + 1] === 'number') {\n        currObj[keys[i]] = [];\n      } else {\n        currObj[keys[i]] = {};\n      }\n    }\n    currObj = currObj[keys[i]];\n  }\n  currObj[keys[keys.length - 1]] = value;\n}\nexport function withStyleAnimation(styleAnimations) {\n  'worklet';\n\n  return defineAnimation({}, function () {\n    'worklet';\n\n    var onFrame = function onFrame(animation, now) {\n      var stillGoing = false;\n      var entriesToCheck = [{\n        value: animation.styleAnimations,\n        path: []\n      }];\n      while (entriesToCheck.length > 0) {\n        var currentEntry = entriesToCheck.pop();\n        if (Array.isArray(currentEntry.value)) {\n          for (var index = 0; index < currentEntry.value.length; index++) {\n            entriesToCheck.push({\n              value: currentEntry.value[index],\n              path: currentEntry.path.concat(index)\n            });\n          }\n        } else if (typeof currentEntry.value === 'object' && currentEntry.value.onFrame === undefined) {\n          for (var _i = 0, _Object$keys = Object.keys(currentEntry.value); _i < _Object$keys.length; _i++) {\n            var key = _Object$keys[_i];\n            entriesToCheck.push({\n              value: currentEntry.value[key],\n              path: currentEntry.path.concat(key)\n            });\n          }\n        } else {\n          var currentStyleAnimation = currentEntry.value;\n          if (currentStyleAnimation.finished) {\n            continue;\n          }\n          var finished = currentStyleAnimation.onFrame(currentStyleAnimation, now);\n          if (finished) {\n            currentStyleAnimation.finished = true;\n            if (currentStyleAnimation.callback) {\n              currentStyleAnimation.callback(true);\n            }\n          } else {\n            stillGoing = true;\n          }\n          var isAnimatingColorProp = ColorProperties.includes(currentEntry.path[0]);\n          setPath(animation.current, currentEntry.path, isAnimatingColorProp ? processColor(currentStyleAnimation.current) : currentStyleAnimation.current);\n        }\n      }\n      return !stillGoing;\n    };\n    var onStart = function onStart(animation, value, now, previousAnimation) {\n      var entriesToCheck = [{\n        value: styleAnimations,\n        path: []\n      }];\n      while (entriesToCheck.length > 0) {\n        var currentEntry = entriesToCheck.pop();\n        if (Array.isArray(currentEntry.value)) {\n          for (var index = 0; index < currentEntry.value.length; index++) {\n            entriesToCheck.push({\n              value: currentEntry.value[index],\n              path: currentEntry.path.concat(index)\n            });\n          }\n        } else if (typeof currentEntry.value === 'object' && currentEntry.value.onStart === undefined) {\n          for (var _i2 = 0, _Object$keys2 = Object.keys(currentEntry.value); _i2 < _Object$keys2.length; _i2++) {\n            var key = _Object$keys2[_i2];\n            entriesToCheck.push({\n              value: currentEntry.value[key],\n              path: currentEntry.path.concat(key)\n            });\n          }\n        } else {\n          var prevAnimation = resolvePath(previousAnimation === null || previousAnimation === void 0 ? void 0 : previousAnimation.styleAnimations, currentEntry.path);\n          var prevVal = resolvePath(value, currentEntry.path);\n          if (prevAnimation && !prevVal) {\n            prevVal = prevAnimation.current;\n          }\n          if (prevVal === undefined) {\n            console.warn(\"Initial values for animation are missing for property \" + currentEntry.path.join('.'));\n          }\n          setPath(animation.current, currentEntry.path, prevVal);\n          var currentAnimation = void 0;\n          if (typeof currentEntry.value !== 'object' || !currentEntry.value.onStart) {\n            currentAnimation = withTiming(currentEntry.value, {\n              duration: 0\n            });\n            setPath(animation.styleAnimations, currentEntry.path, currentAnimation);\n          } else {\n            currentAnimation = currentEntry.value;\n          }\n          currentAnimation.onStart(currentAnimation, prevVal, now, prevAnimation);\n        }\n      }\n    };\n    var callback = function callback(finished) {\n      if (!finished) {\n        var animationsToCheck = [styleAnimations];\n        while (animationsToCheck.length > 0) {\n          var currentAnimation = animationsToCheck.pop();\n          if (Array.isArray(currentAnimation)) {\n            for (var _iterator = _createForOfIteratorHelperLoose(currentAnimation), _step; !(_step = _iterator()).done;) {\n              var element = _step.value;\n              animationsToCheck.push(element);\n            }\n          } else if (typeof currentAnimation === 'object' && currentAnimation.onStart === undefined) {\n            for (var _i3 = 0, _Object$values = Object.values(currentAnimation); _i3 < _Object$values.length; _i3++) {\n              var value = _Object$values[_i3];\n              animationsToCheck.push(value);\n            }\n          } else {\n            var currentStyleAnimation = currentAnimation;\n            if (!currentStyleAnimation.finished && currentStyleAnimation.callback) {\n              currentStyleAnimation.callback(false);\n            }\n          }\n        }\n      }\n    };\n    return {\n      isHigherOrder: true,\n      onFrame: onFrame,\n      onStart: onStart,\n      current: {},\n      styleAnimations: styleAnimations,\n      callback: callback\n    };\n  });\n}","map":{"version":3,"names":["_createForOfIteratorHelperLoose","r","e","t","Symbol","iterator","call","next","bind","Array","isArray","_unsupportedIterableToArray","length","o","done","value","TypeError","a","_arrayLikeToArray","toString","slice","constructor","name","from","test","n","defineAnimation","withTiming","ColorProperties","processColor","resolvePath","obj","path","keys","reduce","acc","current","undefined","setPath","currObj","i","withStyleAnimation","styleAnimations","onFrame","animation","now","stillGoing","entriesToCheck","currentEntry","pop","index","push","concat","_i","_Object$keys","Object","key","currentStyleAnimation","finished","callback","isAnimatingColorProp","includes","onStart","previousAnimation","_i2","_Object$keys2","prevAnimation","prevVal","console","warn","join","currentAnimation","duration","animationsToCheck","_iterator","_step","element","_i3","_Object$values","values","isHigherOrder"],"sources":["/Users/xd/Desktop/study/react/react-project/StickerSmash/node_modules/react-native-reanimated/lib/module/reanimated2/animation/styleAnimation.ts"],"sourcesContent":["'use strict';\nimport { defineAnimation } from './util';\nimport type {\n  Timestamp,\n  AnimatableValue,\n  AnimationObject,\n  Animation,\n  NestedObject,\n  NestedObjectValues,\n} from '../commonTypes';\nimport type { AnimatedStyle } from '../helperTypes';\nimport type { StyleLayoutAnimation } from './commonTypes';\nimport { withTiming } from './timing';\nimport { ColorProperties, processColor } from '../Colors';\n\n// resolves path to value for nested objects\n// if path cannot be resolved returns undefined\nfunction resolvePath<T>(\n  obj: NestedObject<T>,\n  path: AnimatableValue[] | AnimatableValue\n): NestedObjectValues<T> | undefined {\n  'worklet';\n  const keys: AnimatableValue[] = Array.isArray(path) ? path : [path];\n  return keys.reduce<NestedObjectValues<T> | undefined>((acc, current) => {\n    if (Array.isArray(acc) && typeof current === 'number') {\n      return acc[current];\n    } else if (\n      acc !== null &&\n      typeof acc === 'object' &&\n      (current as number | string) in acc\n    ) {\n      return (acc as { [key: string]: NestedObjectValues<T> })[\n        current as number | string\n      ];\n    }\n    return undefined;\n  }, obj);\n}\n\n// set value at given path\ntype Path = Array<string | number> | string | number;\nfunction setPath<T>(\n  obj: NestedObject<T>,\n  path: Path,\n  value: NestedObjectValues<T>\n): void {\n  'worklet';\n  const keys: Path = Array.isArray(path) ? path : [path];\n  let currObj: NestedObjectValues<T> = obj;\n  for (let i = 0; i < keys.length - 1; i++) {\n    // creates entry if there isn't one\n    currObj = currObj as { [key: string]: NestedObjectValues<T> };\n    if (!(keys[i] in currObj)) {\n      // if next key is a number create an array\n      if (typeof keys[i + 1] === 'number') {\n        currObj[keys[i]] = [];\n      } else {\n        currObj[keys[i]] = {};\n      }\n    }\n    currObj = currObj[keys[i]];\n  }\n\n  (currObj as { [key: string]: NestedObjectValues<T> })[keys[keys.length - 1]] =\n    value;\n}\n\ninterface NestedObjectEntry<T> {\n  value: NestedObjectValues<T>;\n  path: (string | number)[];\n}\n\nexport function withStyleAnimation(\n  styleAnimations: AnimatedStyle<any>\n): StyleLayoutAnimation {\n  'worklet';\n  return defineAnimation<StyleLayoutAnimation>({}, () => {\n    'worklet';\n\n    const onFrame = (\n      animation: StyleLayoutAnimation,\n      now: Timestamp\n    ): boolean => {\n      let stillGoing = false;\n      const entriesToCheck: NestedObjectEntry<AnimationObject>[] = [\n        { value: animation.styleAnimations, path: [] },\n      ];\n      while (entriesToCheck.length > 0) {\n        const currentEntry: NestedObjectEntry<AnimationObject> =\n          entriesToCheck.pop() as NestedObjectEntry<AnimationObject>;\n        if (Array.isArray(currentEntry.value)) {\n          for (let index = 0; index < currentEntry.value.length; index++) {\n            entriesToCheck.push({\n              value: currentEntry.value[index],\n              path: currentEntry.path.concat(index),\n            });\n          }\n        } else if (\n          typeof currentEntry.value === 'object' &&\n          currentEntry.value.onFrame === undefined\n        ) {\n          // nested object\n          for (const key of Object.keys(currentEntry.value)) {\n            entriesToCheck.push({\n              value: currentEntry.value[key],\n              path: currentEntry.path.concat(key),\n            });\n          }\n        } else {\n          const currentStyleAnimation: AnimationObject =\n            currentEntry.value as AnimationObject;\n          if (currentStyleAnimation.finished) {\n            continue;\n          }\n          const finished = currentStyleAnimation.onFrame(\n            currentStyleAnimation,\n            now\n          );\n          if (finished) {\n            currentStyleAnimation.finished = true;\n            if (currentStyleAnimation.callback) {\n              currentStyleAnimation.callback(true);\n            }\n          } else {\n            stillGoing = true;\n          }\n\n          // When working with animations changing colors, we need to make sure that each one of them begins with a rgba, not a processed number.\n          // Thus, we only set the path to a processed color, but currentStyleAnimation.current stays as rgba.\n          const isAnimatingColorProp = ColorProperties.includes(\n            currentEntry.path[0] as string\n          );\n\n          setPath(\n            animation.current,\n            currentEntry.path,\n            isAnimatingColorProp\n              ? processColor(currentStyleAnimation.current)\n              : currentStyleAnimation.current\n          );\n        }\n      }\n      return !stillGoing;\n    };\n\n    const onStart = (\n      animation: StyleLayoutAnimation,\n      value: AnimatedStyle<any>,\n      now: Timestamp,\n      previousAnimation: StyleLayoutAnimation\n    ): void => {\n      const entriesToCheck: NestedObjectEntry<\n        AnimationObject | AnimatableValue\n      >[] = [{ value: styleAnimations, path: [] }];\n      while (entriesToCheck.length > 0) {\n        const currentEntry: NestedObjectEntry<\n          AnimationObject | AnimatableValue\n        > = entriesToCheck.pop() as NestedObjectEntry<\n          AnimationObject | AnimatableValue\n        >;\n        if (Array.isArray(currentEntry.value)) {\n          for (let index = 0; index < currentEntry.value.length; index++) {\n            entriesToCheck.push({\n              value: currentEntry.value[index],\n              path: currentEntry.path.concat(index),\n            });\n          }\n        } else if (\n          typeof currentEntry.value === 'object' &&\n          currentEntry.value.onStart === undefined\n        ) {\n          for (const key of Object.keys(currentEntry.value)) {\n            entriesToCheck.push({\n              value: currentEntry.value[key],\n              path: currentEntry.path.concat(key),\n            });\n          }\n        } else {\n          const prevAnimation = resolvePath(\n            previousAnimation?.styleAnimations,\n            currentEntry.path\n          );\n          let prevVal = resolvePath(value, currentEntry.path);\n          if (prevAnimation && !prevVal) {\n            prevVal = (prevAnimation as any).current;\n          }\n          if (prevVal === undefined) {\n            console.warn(\n              `Initial values for animation are missing for property ${currentEntry.path.join(\n                '.'\n              )}`\n            );\n          }\n          setPath(animation.current, currentEntry.path, prevVal);\n          let currentAnimation: AnimationObject;\n          if (\n            typeof currentEntry.value !== 'object' ||\n            !currentEntry.value.onStart\n          ) {\n            currentAnimation = withTiming(\n              currentEntry.value as AnimatableValue,\n              { duration: 0 }\n            ) as AnimationObject; // TODO TYPESCRIPT this temporary cast is to get rid of .d.ts file.\n            setPath(\n              animation.styleAnimations,\n              currentEntry.path,\n              currentAnimation\n            );\n          } else {\n            currentAnimation = currentEntry.value as Animation<AnimationObject>;\n          }\n          currentAnimation.onStart(\n            currentAnimation,\n            prevVal,\n            now,\n            prevAnimation\n          );\n        }\n      }\n    };\n\n    const callback = (finished: boolean): void => {\n      if (!finished) {\n        const animationsToCheck: NestedObjectValues<AnimationObject>[] = [\n          styleAnimations,\n        ];\n        while (animationsToCheck.length > 0) {\n          const currentAnimation: NestedObjectValues<AnimationObject> =\n            animationsToCheck.pop() as NestedObjectValues<AnimationObject>;\n          if (Array.isArray(currentAnimation)) {\n            for (const element of currentAnimation) {\n              animationsToCheck.push(element);\n            }\n          } else if (\n            typeof currentAnimation === 'object' &&\n            currentAnimation.onStart === undefined\n          ) {\n            for (const value of Object.values(currentAnimation)) {\n              animationsToCheck.push(value);\n            }\n          } else {\n            const currentStyleAnimation: AnimationObject =\n              currentAnimation as AnimationObject;\n            if (\n              !currentStyleAnimation.finished &&\n              currentStyleAnimation.callback\n            ) {\n              currentStyleAnimation.callback(false);\n            }\n          }\n        }\n      }\n    };\n\n    return {\n      isHigherOrder: true,\n      onFrame,\n      onStart,\n      current: {},\n      styleAnimations,\n      callback,\n    } as StyleLayoutAnimation;\n  });\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}